/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { targetAppsBulkUpdate } from "../funcs/targetAppsBulkUpdate.js";
import { targetAppsCreate } from "../funcs/targetAppsCreate.js";
import { targetAppsDelete } from "../funcs/targetAppsDelete.js";
import { targetAppsGet } from "../funcs/targetAppsGet.js";
import { targetAppsList } from "../funcs/targetAppsList.js";
import { targetAppsUpdate } from "../funcs/targetAppsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class TargetApps extends ClientSDK {
    /**
     * Read Target App
     */
    async get(
        request: operations.ConsoleV1TargetAppControllerGenReadRequest,
        options?: RequestOptions
    ): Promise<operations.ConsoleV1TargetAppControllerGenReadResponseBody> {
        return unwrapAsync(targetAppsGet(this, request, options));
    }

    /**
     * Update Target App
     */
    async update(
        request: operations.ConsoleV1TargetAppControllerGenUpdateRequest,
        options?: RequestOptions
    ): Promise<operations.ConsoleV1TargetAppControllerGenUpdateResponseBody> {
        return unwrapAsync(targetAppsUpdate(this, request, options));
    }

    /**
     * Delete Target App
     */
    async delete(
        request: operations.ConsoleV1TargetAppControllerGenDeleteRequest,
        options?: RequestOptions
    ): Promise<operations.ConsoleV1TargetAppControllerGenDeleteResponseBody> {
        return unwrapAsync(targetAppsDelete(this, request, options));
    }

    /**
     * List Target Apps
     */
    async list(
        request: operations.ConsoleV1TargetAppControllerGenListRequest,
        options?: RequestOptions
    ): Promise<operations.ConsoleV1TargetAppControllerGenListResponseBody> {
        return unwrapAsync(targetAppsList(this, request, options));
    }

    /**
     * Bulk Assign Target Apps
     */
    async bulkUpdate(
        request: operations.ConsoleV1TargetAppControllerBulkUpdateRequest,
        options?: RequestOptions
    ): Promise<operations.ConsoleV1TargetAppControllerBulkUpdateResponseBody> {
        return unwrapAsync(targetAppsBulkUpdate(this, request, options));
    }

    /**
     * Create Target App
     */
    async create(
        request: operations.ConsoleV1TargetAppControllerGenCreateRequest,
        options?: RequestOptions
    ): Promise<operations.ConsoleV1TargetAppControllerGenCreateResponseBody> {
        return unwrapAsync(targetAppsCreate(this, request, options));
    }
}
