/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersGet } from "../funcs/usersGet.js";
import { usersInvite } from "../funcs/usersInvite.js";
import { usersList } from "../funcs/usersList.js";
import { usersUpdate } from "../funcs/usersUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Users extends ClientSDK {
    /**
     * List Users
     */
    async list(
        request: operations.ConsoleV1UsersControllerGenListRequest,
        options?: RequestOptions
    ): Promise<operations.ConsoleV1UsersControllerGenListResponseBody> {
        return unwrapAsync(usersList(this, request, options));
    }

    /**
     * Get user by id
     */
    async get(
        request: operations.ConsoleV1UsersControllerGenReadRequest,
        options?: RequestOptions
    ): Promise<operations.ConsoleV1UsersControllerGenReadResponseBody> {
        return unwrapAsync(usersGet(this, request, options));
    }

    /**
     * Update user
     */
    async update(
        request: operations.ConsoleV1UsersControllerUpdateRequest,
        options?: RequestOptions
    ): Promise<operations.ConsoleV1UsersControllerUpdateResponseBody> {
        return unwrapAsync(usersUpdate(this, request, options));
    }

    /**
     * Invite user
     */
    async invite(
        request: operations.ConsoleV1UsersControllerInviteUsersRequest,
        options?: RequestOptions
    ): Promise<operations.ConsoleV1UsersControllerInviteUsersResponseBody> {
        return unwrapAsync(usersInvite(this, request, options));
    }
}
