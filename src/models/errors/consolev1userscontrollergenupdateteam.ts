/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1UsersControllerGenUpdateTeamTeamsStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1UsersControllerGenUpdateTeamTeamsStatus = ClosedEnum<
    typeof ConsoleV1UsersControllerGenUpdateTeamTeamsStatus
>;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBodyData = {
    status: ConsoleV1UsersControllerGenUpdateTeamTeamsStatus;
    message: string;
};

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody extends Error {
    status: ConsoleV1UsersControllerGenUpdateTeamTeamsStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBodyData;

    constructor(err: ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody";
    }
}

export const ConsoleV1UsersControllerGenUpdateTeamStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1UsersControllerGenUpdateTeamStatus = ClosedEnum<
    typeof ConsoleV1UsersControllerGenUpdateTeamStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1UsersControllerGenUpdateTeamResponseBodyData = {
    status: ConsoleV1UsersControllerGenUpdateTeamStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1UsersControllerGenUpdateTeamResponseBody extends Error {
    status: ConsoleV1UsersControllerGenUpdateTeamStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1UsersControllerGenUpdateTeamResponseBodyData;

    constructor(err: ConsoleV1UsersControllerGenUpdateTeamResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1UsersControllerGenUpdateTeamResponseBody";
    }
}

/** @internal */
export const ConsoleV1UsersControllerGenUpdateTeamTeamsStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1UsersControllerGenUpdateTeamTeamsStatus
> = z.nativeEnum(ConsoleV1UsersControllerGenUpdateTeamTeamsStatus);

/** @internal */
export const ConsoleV1UsersControllerGenUpdateTeamTeamsStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1UsersControllerGenUpdateTeamTeamsStatus
> = ConsoleV1UsersControllerGenUpdateTeamTeamsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1UsersControllerGenUpdateTeamTeamsStatus$ {
    /** @deprecated use `ConsoleV1UsersControllerGenUpdateTeamTeamsStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1UsersControllerGenUpdateTeamTeamsStatus$inboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenUpdateTeamTeamsStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1UsersControllerGenUpdateTeamTeamsStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody$inboundSchema: z.ZodType<
    ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1UsersControllerGenUpdateTeamTeamsStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody(v);
    });

/** @internal */
export type ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody$outboundSchema: z.ZodType<
    ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody
> = z
    .instanceof(ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1UsersControllerGenUpdateTeamTeamsStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody$ {
    /** @deprecated use `ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1UsersControllerGenUpdateTeamTeamsResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1UsersControllerGenUpdateTeamStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1UsersControllerGenUpdateTeamStatus
> = z.nativeEnum(ConsoleV1UsersControllerGenUpdateTeamStatus);

/** @internal */
export const ConsoleV1UsersControllerGenUpdateTeamStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1UsersControllerGenUpdateTeamStatus
> = ConsoleV1UsersControllerGenUpdateTeamStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1UsersControllerGenUpdateTeamStatus$ {
    /** @deprecated use `ConsoleV1UsersControllerGenUpdateTeamStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1UsersControllerGenUpdateTeamStatus$inboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenUpdateTeamStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1UsersControllerGenUpdateTeamStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1UsersControllerGenUpdateTeamResponseBody$inboundSchema: z.ZodType<
    ConsoleV1UsersControllerGenUpdateTeamResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1UsersControllerGenUpdateTeamStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1UsersControllerGenUpdateTeamResponseBody(v);
    });

/** @internal */
export type ConsoleV1UsersControllerGenUpdateTeamResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1UsersControllerGenUpdateTeamResponseBody$outboundSchema: z.ZodType<
    ConsoleV1UsersControllerGenUpdateTeamResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1UsersControllerGenUpdateTeamResponseBody
> = z
    .instanceof(ConsoleV1UsersControllerGenUpdateTeamResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1UsersControllerGenUpdateTeamStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1UsersControllerGenUpdateTeamResponseBody$ {
    /** @deprecated use `ConsoleV1UsersControllerGenUpdateTeamResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1UsersControllerGenUpdateTeamResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenUpdateTeamResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1UsersControllerGenUpdateTeamResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenUpdateTeamResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1UsersControllerGenUpdateTeamResponseBody$Outbound;
}
