/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus =
    {
        FourHundredAndFour: 404,
    } as const;
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus
    >;

/**
 * Not Found. The requested resource could not be found.
 */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus;
        message: string;
    };

/**
 * Not Found. The requested resource could not be found.
 */
export class ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus
    >;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus;
        message: string;
    };

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus
> =
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus
> = ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryExperimentsResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus
> = ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceQueryResponseBody$Outbound;
}
