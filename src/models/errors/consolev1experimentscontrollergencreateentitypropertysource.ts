/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus =
    {
        FourHundredAndFour: 404,
    } as const;
export type ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus
    >;

/**
 * Not Found. The requested resource could not be found.
 */
export type ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus;
        message: string;
    };

/**
 * Not Found. The requested resource could not be found.
 */
export class ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus =
    {
        FourHundredAndOne: 401,
    } as const;
export type ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus
    >;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus;
        message: string;
    };

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus
> =
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus
> =
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus
> = ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenCreateEntityPropertySourceResponseBody$Outbound;
}
