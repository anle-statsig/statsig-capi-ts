/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1KeysControllerGenUpdateKeysStatus = {
    FourHundredAndFour: 404,
} as const;
export type ConsoleV1KeysControllerGenUpdateKeysStatus = ClosedEnum<
    typeof ConsoleV1KeysControllerGenUpdateKeysStatus
>;

/**
 * Key not found.
 */
export type ConsoleV1KeysControllerGenUpdateKeysResponseBodyData = {
    status: ConsoleV1KeysControllerGenUpdateKeysStatus;
    message: string;
};

/**
 * Key not found.
 */
export class ConsoleV1KeysControllerGenUpdateKeysResponseBody extends Error {
    status: ConsoleV1KeysControllerGenUpdateKeysStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1KeysControllerGenUpdateKeysResponseBodyData;

    constructor(err: ConsoleV1KeysControllerGenUpdateKeysResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1KeysControllerGenUpdateKeysResponseBody";
    }
}

export const ConsoleV1KeysControllerGenUpdateStatus = {
    FourHundredAndThree: 403,
} as const;
export type ConsoleV1KeysControllerGenUpdateStatus = ClosedEnum<
    typeof ConsoleV1KeysControllerGenUpdateStatus
>;

/**
 * Insufficient permissions.
 */
export type ConsoleV1KeysControllerGenUpdateResponseBodyData = {
    status: ConsoleV1KeysControllerGenUpdateStatus;
    message: string;
};

/**
 * Insufficient permissions.
 */
export class ConsoleV1KeysControllerGenUpdateResponseBody extends Error {
    status: ConsoleV1KeysControllerGenUpdateStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1KeysControllerGenUpdateResponseBodyData;

    constructor(err: ConsoleV1KeysControllerGenUpdateResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1KeysControllerGenUpdateResponseBody";
    }
}

/** @internal */
export const ConsoleV1KeysControllerGenUpdateKeysStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenUpdateKeysStatus
> = z.nativeEnum(ConsoleV1KeysControllerGenUpdateKeysStatus);

/** @internal */
export const ConsoleV1KeysControllerGenUpdateKeysStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenUpdateKeysStatus
> = ConsoleV1KeysControllerGenUpdateKeysStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenUpdateKeysStatus$ {
    /** @deprecated use `ConsoleV1KeysControllerGenUpdateKeysStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenUpdateKeysStatus$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenUpdateKeysStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenUpdateKeysStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1KeysControllerGenUpdateKeysResponseBody$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenUpdateKeysResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1KeysControllerGenUpdateKeysStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1KeysControllerGenUpdateKeysResponseBody(v);
    });

/** @internal */
export type ConsoleV1KeysControllerGenUpdateKeysResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1KeysControllerGenUpdateKeysResponseBody$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenUpdateKeysResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenUpdateKeysResponseBody
> = z
    .instanceof(ConsoleV1KeysControllerGenUpdateKeysResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1KeysControllerGenUpdateKeysStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenUpdateKeysResponseBody$ {
    /** @deprecated use `ConsoleV1KeysControllerGenUpdateKeysResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenUpdateKeysResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenUpdateKeysResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenUpdateKeysResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenUpdateKeysResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenUpdateKeysResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1KeysControllerGenUpdateStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenUpdateStatus
> = z.nativeEnum(ConsoleV1KeysControllerGenUpdateStatus);

/** @internal */
export const ConsoleV1KeysControllerGenUpdateStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenUpdateStatus
> = ConsoleV1KeysControllerGenUpdateStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenUpdateStatus$ {
    /** @deprecated use `ConsoleV1KeysControllerGenUpdateStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenUpdateStatus$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenUpdateStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenUpdateStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1KeysControllerGenUpdateResponseBody$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenUpdateResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1KeysControllerGenUpdateStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1KeysControllerGenUpdateResponseBody(v);
    });

/** @internal */
export type ConsoleV1KeysControllerGenUpdateResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1KeysControllerGenUpdateResponseBody$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenUpdateResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenUpdateResponseBody
> = z
    .instanceof(ConsoleV1KeysControllerGenUpdateResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1KeysControllerGenUpdateStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenUpdateResponseBody$ {
    /** @deprecated use `ConsoleV1KeysControllerGenUpdateResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenUpdateResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenUpdateResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenUpdateResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenUpdateResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenUpdateResponseBody$Outbound;
}
