/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus = {
    FourHundredAndFour: 404,
} as const;
export type ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus = ClosedEnum<
    typeof ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus
>;

/**
 * Gates with IDs [not a gate] do not exist
 */
export type ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBodyData = {
    status: ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus;
    message: string;
};

/**
 * Gates with IDs [not a gate] do not exist
 */
export class ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody extends Error {
    status: ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBodyData;

    constructor(err: ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody";
    }
}

export const ConsoleV1TargetAppControllerGenUpdateStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1TargetAppControllerGenUpdateStatus = ClosedEnum<
    typeof ConsoleV1TargetAppControllerGenUpdateStatus
>;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1TargetAppControllerGenUpdateResponseBodyData = {
    status: ConsoleV1TargetAppControllerGenUpdateStatus;
    message: string;
};

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1TargetAppControllerGenUpdateResponseBody extends Error {
    status: ConsoleV1TargetAppControllerGenUpdateStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1TargetAppControllerGenUpdateResponseBodyData;

    constructor(err: ConsoleV1TargetAppControllerGenUpdateResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1TargetAppControllerGenUpdateResponseBody";
    }
}

/** @internal */
export const ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus
> = z.nativeEnum(ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus);

/** @internal */
export const ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus
> = ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus$ {
    /** @deprecated use `ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus$inboundSchema;
    /** @deprecated use `ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody$inboundSchema: z.ZodType<
    ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody(v);
    });

/** @internal */
export type ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody$outboundSchema: z.ZodType<
    ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody
> = z
    .instanceof(ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1TargetAppControllerGenUpdateTargetAppsStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody$ {
    /** @deprecated use `ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1TargetAppControllerGenUpdateTargetAppsResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1TargetAppControllerGenUpdateStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1TargetAppControllerGenUpdateStatus
> = z.nativeEnum(ConsoleV1TargetAppControllerGenUpdateStatus);

/** @internal */
export const ConsoleV1TargetAppControllerGenUpdateStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1TargetAppControllerGenUpdateStatus
> = ConsoleV1TargetAppControllerGenUpdateStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1TargetAppControllerGenUpdateStatus$ {
    /** @deprecated use `ConsoleV1TargetAppControllerGenUpdateStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1TargetAppControllerGenUpdateStatus$inboundSchema;
    /** @deprecated use `ConsoleV1TargetAppControllerGenUpdateStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1TargetAppControllerGenUpdateStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1TargetAppControllerGenUpdateResponseBody$inboundSchema: z.ZodType<
    ConsoleV1TargetAppControllerGenUpdateResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1TargetAppControllerGenUpdateStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1TargetAppControllerGenUpdateResponseBody(v);
    });

/** @internal */
export type ConsoleV1TargetAppControllerGenUpdateResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1TargetAppControllerGenUpdateResponseBody$outboundSchema: z.ZodType<
    ConsoleV1TargetAppControllerGenUpdateResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1TargetAppControllerGenUpdateResponseBody
> = z
    .instanceof(ConsoleV1TargetAppControllerGenUpdateResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1TargetAppControllerGenUpdateStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1TargetAppControllerGenUpdateResponseBody$ {
    /** @deprecated use `ConsoleV1TargetAppControllerGenUpdateResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1TargetAppControllerGenUpdateResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1TargetAppControllerGenUpdateResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1TargetAppControllerGenUpdateResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1TargetAppControllerGenUpdateResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1TargetAppControllerGenUpdateResponseBody$Outbound;
}
