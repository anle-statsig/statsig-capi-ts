/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus =
    {
        FourHundredAndFour: 404,
    } as const;
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus
    >;

/**
 * Not Found. The requested resource could not be found.
 */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus;
        message: string;
    };

/**
 * Not Found. The requested resource could not be found.
 */
export class ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus =
    {
        FourHundredAndOne: 401,
    } as const;
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus
    >;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus;
        message: string;
    };

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus
> =
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus
> =
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryExperimentsWarehouseNativeResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus
> = ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceQueryResponseBody$Outbound;
}
