/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus =
    {
        FourHundredAndFour: 404,
    } as const;
export type ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus
    >;

/**
 * Not Found. The requested resource could not be found.
 */
export type ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus;
        message: string;
    };

/**
 * Not Found. The requested resource could not be found.
 */
export class ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus =
    {
        FourHundredAndOne: 401,
    } as const;
export type ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus
    >;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus;
        message: string;
    };

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus
> =
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus
> =
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus
> = ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenRemoveEntityPropertySourceResponseBody$Outbound;
}
