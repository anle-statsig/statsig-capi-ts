/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1UsersControllerGenCreateTeamTeamsStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1UsersControllerGenCreateTeamTeamsStatus = ClosedEnum<
    typeof ConsoleV1UsersControllerGenCreateTeamTeamsStatus
>;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1UsersControllerGenCreateTeamTeamsResponseBodyData = {
    status: ConsoleV1UsersControllerGenCreateTeamTeamsStatus;
    message: string;
};

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody extends Error {
    status: ConsoleV1UsersControllerGenCreateTeamTeamsStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1UsersControllerGenCreateTeamTeamsResponseBodyData;

    constructor(err: ConsoleV1UsersControllerGenCreateTeamTeamsResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody";
    }
}

export const ConsoleV1UsersControllerGenCreateTeamStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1UsersControllerGenCreateTeamStatus = ClosedEnum<
    typeof ConsoleV1UsersControllerGenCreateTeamStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1UsersControllerGenCreateTeamResponseBodyData = {
    status: ConsoleV1UsersControllerGenCreateTeamStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1UsersControllerGenCreateTeamResponseBody extends Error {
    status: ConsoleV1UsersControllerGenCreateTeamStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1UsersControllerGenCreateTeamResponseBodyData;

    constructor(err: ConsoleV1UsersControllerGenCreateTeamResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1UsersControllerGenCreateTeamResponseBody";
    }
}

/** @internal */
export const ConsoleV1UsersControllerGenCreateTeamTeamsStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1UsersControllerGenCreateTeamTeamsStatus
> = z.nativeEnum(ConsoleV1UsersControllerGenCreateTeamTeamsStatus);

/** @internal */
export const ConsoleV1UsersControllerGenCreateTeamTeamsStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1UsersControllerGenCreateTeamTeamsStatus
> = ConsoleV1UsersControllerGenCreateTeamTeamsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1UsersControllerGenCreateTeamTeamsStatus$ {
    /** @deprecated use `ConsoleV1UsersControllerGenCreateTeamTeamsStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1UsersControllerGenCreateTeamTeamsStatus$inboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenCreateTeamTeamsStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1UsersControllerGenCreateTeamTeamsStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody$inboundSchema: z.ZodType<
    ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1UsersControllerGenCreateTeamTeamsStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody(v);
    });

/** @internal */
export type ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody$outboundSchema: z.ZodType<
    ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody
> = z
    .instanceof(ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1UsersControllerGenCreateTeamTeamsStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody$ {
    /** @deprecated use `ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1UsersControllerGenCreateTeamTeamsResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1UsersControllerGenCreateTeamStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1UsersControllerGenCreateTeamStatus
> = z.nativeEnum(ConsoleV1UsersControllerGenCreateTeamStatus);

/** @internal */
export const ConsoleV1UsersControllerGenCreateTeamStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1UsersControllerGenCreateTeamStatus
> = ConsoleV1UsersControllerGenCreateTeamStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1UsersControllerGenCreateTeamStatus$ {
    /** @deprecated use `ConsoleV1UsersControllerGenCreateTeamStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1UsersControllerGenCreateTeamStatus$inboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenCreateTeamStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1UsersControllerGenCreateTeamStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1UsersControllerGenCreateTeamResponseBody$inboundSchema: z.ZodType<
    ConsoleV1UsersControllerGenCreateTeamResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1UsersControllerGenCreateTeamStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1UsersControllerGenCreateTeamResponseBody(v);
    });

/** @internal */
export type ConsoleV1UsersControllerGenCreateTeamResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1UsersControllerGenCreateTeamResponseBody$outboundSchema: z.ZodType<
    ConsoleV1UsersControllerGenCreateTeamResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1UsersControllerGenCreateTeamResponseBody
> = z
    .instanceof(ConsoleV1UsersControllerGenCreateTeamResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1UsersControllerGenCreateTeamStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1UsersControllerGenCreateTeamResponseBody$ {
    /** @deprecated use `ConsoleV1UsersControllerGenCreateTeamResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1UsersControllerGenCreateTeamResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenCreateTeamResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1UsersControllerGenCreateTeamResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerGenCreateTeamResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1UsersControllerGenCreateTeamResponseBody$Outbound;
}
