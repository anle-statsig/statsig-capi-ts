/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus =
    {
        FourHundredAndOne: 401,
    } as const;
export type ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus
    >;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus;
        message: string;
    };

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus
> =
    ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenCreateAssignmentSourceExperimentsWarehouseNativeResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus
> = ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenCreateAssignmentSourceStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenCreateAssignmentSourceResponseBody$Outbound;
}
