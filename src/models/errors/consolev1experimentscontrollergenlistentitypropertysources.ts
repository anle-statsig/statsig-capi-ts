/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus =
    {
        FourHundredAndOne: 401,
    } as const;
export type ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus
    >;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus;
        message: string;
    };

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus
> =
    ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenListEntityPropertySourcesExperimentsWarehouseNativeResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus
> = ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenListEntityPropertySourcesStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenListEntityPropertySourcesResponseBody$Outbound;
}
