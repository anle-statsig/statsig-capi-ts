/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1KeysControllerGenReadKeysStatus = {
    FourHundredAndFour: 404,
} as const;
export type ConsoleV1KeysControllerGenReadKeysStatus = ClosedEnum<
    typeof ConsoleV1KeysControllerGenReadKeysStatus
>;

/**
 * Key not found.
 */
export type ConsoleV1KeysControllerGenReadKeysResponseBodyData = {
    status: ConsoleV1KeysControllerGenReadKeysStatus;
    message: string;
};

/**
 * Key not found.
 */
export class ConsoleV1KeysControllerGenReadKeysResponseBody extends Error {
    status: ConsoleV1KeysControllerGenReadKeysStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1KeysControllerGenReadKeysResponseBodyData;

    constructor(err: ConsoleV1KeysControllerGenReadKeysResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1KeysControllerGenReadKeysResponseBody";
    }
}

export const ConsoleV1KeysControllerGenReadStatus = {
    FourHundredAndThree: 403,
} as const;
export type ConsoleV1KeysControllerGenReadStatus = ClosedEnum<
    typeof ConsoleV1KeysControllerGenReadStatus
>;

/**
 * Insufficient permissions.
 */
export type ConsoleV1KeysControllerGenReadResponseBodyData = {
    status: ConsoleV1KeysControllerGenReadStatus;
    message: string;
};

/**
 * Insufficient permissions.
 */
export class ConsoleV1KeysControllerGenReadResponseBody extends Error {
    status: ConsoleV1KeysControllerGenReadStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1KeysControllerGenReadResponseBodyData;

    constructor(err: ConsoleV1KeysControllerGenReadResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1KeysControllerGenReadResponseBody";
    }
}

/** @internal */
export const ConsoleV1KeysControllerGenReadKeysStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenReadKeysStatus
> = z.nativeEnum(ConsoleV1KeysControllerGenReadKeysStatus);

/** @internal */
export const ConsoleV1KeysControllerGenReadKeysStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenReadKeysStatus
> = ConsoleV1KeysControllerGenReadKeysStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenReadKeysStatus$ {
    /** @deprecated use `ConsoleV1KeysControllerGenReadKeysStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenReadKeysStatus$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenReadKeysStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenReadKeysStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1KeysControllerGenReadKeysResponseBody$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenReadKeysResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1KeysControllerGenReadKeysStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1KeysControllerGenReadKeysResponseBody(v);
    });

/** @internal */
export type ConsoleV1KeysControllerGenReadKeysResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1KeysControllerGenReadKeysResponseBody$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenReadKeysResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenReadKeysResponseBody
> = z
    .instanceof(ConsoleV1KeysControllerGenReadKeysResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1KeysControllerGenReadKeysStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenReadKeysResponseBody$ {
    /** @deprecated use `ConsoleV1KeysControllerGenReadKeysResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenReadKeysResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenReadKeysResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenReadKeysResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenReadKeysResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenReadKeysResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1KeysControllerGenReadStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenReadStatus
> = z.nativeEnum(ConsoleV1KeysControllerGenReadStatus);

/** @internal */
export const ConsoleV1KeysControllerGenReadStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenReadStatus
> = ConsoleV1KeysControllerGenReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenReadStatus$ {
    /** @deprecated use `ConsoleV1KeysControllerGenReadStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenReadStatus$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenReadStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenReadStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1KeysControllerGenReadResponseBody$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenReadResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1KeysControllerGenReadStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1KeysControllerGenReadResponseBody(v);
    });

/** @internal */
export type ConsoleV1KeysControllerGenReadResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1KeysControllerGenReadResponseBody$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenReadResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenReadResponseBody
> = z
    .instanceof(ConsoleV1KeysControllerGenReadResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1KeysControllerGenReadStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenReadResponseBody$ {
    /** @deprecated use `ConsoleV1KeysControllerGenReadResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenReadResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenReadResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenReadResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenReadResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenReadResponseBody$Outbound;
}
