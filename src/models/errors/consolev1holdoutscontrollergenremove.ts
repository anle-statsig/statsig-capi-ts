/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus = {
    FourHundredAndFour: 404,
} as const;
export type ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus = ClosedEnum<
    typeof ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus
>;

/**
 * Holdout not found.
 */
export type ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBodyData = {
    status: ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus;
    message: string;
};

/**
 * Holdout not found.
 */
export class ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody extends Error {
    status: ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBodyData;

    constructor(err: ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody";
    }
}

export const ConsoleV1HoldoutsControllerGenRemoveStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1HoldoutsControllerGenRemoveStatus = ClosedEnum<
    typeof ConsoleV1HoldoutsControllerGenRemoveStatus
>;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1HoldoutsControllerGenRemoveResponseBodyData = {
    status: ConsoleV1HoldoutsControllerGenRemoveStatus;
    message: string;
};

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1HoldoutsControllerGenRemoveResponseBody extends Error {
    status: ConsoleV1HoldoutsControllerGenRemoveStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1HoldoutsControllerGenRemoveResponseBodyData;

    constructor(err: ConsoleV1HoldoutsControllerGenRemoveResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1HoldoutsControllerGenRemoveResponseBody";
    }
}

/** @internal */
export const ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus
> = z.nativeEnum(ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus);

/** @internal */
export const ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus
> = ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus$ {
    /** @deprecated use `ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody$inboundSchema: z.ZodType<
    ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody(v);
    });

/** @internal */
export type ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody$outboundSchema: z.ZodType<
    ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody
> = z
    .instanceof(ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1HoldoutsControllerGenRemoveHoldoutsStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody$ {
    /** @deprecated use `ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1HoldoutsControllerGenRemoveHoldoutsResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1HoldoutsControllerGenRemoveStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutsControllerGenRemoveStatus
> = z.nativeEnum(ConsoleV1HoldoutsControllerGenRemoveStatus);

/** @internal */
export const ConsoleV1HoldoutsControllerGenRemoveStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutsControllerGenRemoveStatus
> = ConsoleV1HoldoutsControllerGenRemoveStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutsControllerGenRemoveStatus$ {
    /** @deprecated use `ConsoleV1HoldoutsControllerGenRemoveStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1HoldoutsControllerGenRemoveStatus$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenRemoveStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1HoldoutsControllerGenRemoveStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1HoldoutsControllerGenRemoveResponseBody$inboundSchema: z.ZodType<
    ConsoleV1HoldoutsControllerGenRemoveResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1HoldoutsControllerGenRemoveStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1HoldoutsControllerGenRemoveResponseBody(v);
    });

/** @internal */
export type ConsoleV1HoldoutsControllerGenRemoveResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1HoldoutsControllerGenRemoveResponseBody$outboundSchema: z.ZodType<
    ConsoleV1HoldoutsControllerGenRemoveResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1HoldoutsControllerGenRemoveResponseBody
> = z
    .instanceof(ConsoleV1HoldoutsControllerGenRemoveResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1HoldoutsControllerGenRemoveStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutsControllerGenRemoveResponseBody$ {
    /** @deprecated use `ConsoleV1HoldoutsControllerGenRemoveResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1HoldoutsControllerGenRemoveResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenRemoveResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1HoldoutsControllerGenRemoveResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenRemoveResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1HoldoutsControllerGenRemoveResponseBody$Outbound;
}
