/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1KeysControllerGenDeactivateKeysStatus = {
    FourHundredAndFour: 404,
} as const;
export type ConsoleV1KeysControllerGenDeactivateKeysStatus = ClosedEnum<
    typeof ConsoleV1KeysControllerGenDeactivateKeysStatus
>;

/**
 * Key not found.
 */
export type ConsoleV1KeysControllerGenDeactivateKeysResponseBodyData = {
    status: ConsoleV1KeysControllerGenDeactivateKeysStatus;
    message: string;
};

/**
 * Key not found.
 */
export class ConsoleV1KeysControllerGenDeactivateKeysResponseBody extends Error {
    status: ConsoleV1KeysControllerGenDeactivateKeysStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1KeysControllerGenDeactivateKeysResponseBodyData;

    constructor(err: ConsoleV1KeysControllerGenDeactivateKeysResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1KeysControllerGenDeactivateKeysResponseBody";
    }
}

export const ConsoleV1KeysControllerGenDeactivateStatus = {
    FourHundredAndThree: 403,
} as const;
export type ConsoleV1KeysControllerGenDeactivateStatus = ClosedEnum<
    typeof ConsoleV1KeysControllerGenDeactivateStatus
>;

/**
 * Insufficient permissions.
 */
export type ConsoleV1KeysControllerGenDeactivateResponseBodyData = {
    status: ConsoleV1KeysControllerGenDeactivateStatus;
    message: string;
};

/**
 * Insufficient permissions.
 */
export class ConsoleV1KeysControllerGenDeactivateResponseBody extends Error {
    status: ConsoleV1KeysControllerGenDeactivateStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1KeysControllerGenDeactivateResponseBodyData;

    constructor(err: ConsoleV1KeysControllerGenDeactivateResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1KeysControllerGenDeactivateResponseBody";
    }
}

/** @internal */
export const ConsoleV1KeysControllerGenDeactivateKeysStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenDeactivateKeysStatus
> = z.nativeEnum(ConsoleV1KeysControllerGenDeactivateKeysStatus);

/** @internal */
export const ConsoleV1KeysControllerGenDeactivateKeysStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenDeactivateKeysStatus
> = ConsoleV1KeysControllerGenDeactivateKeysStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenDeactivateKeysStatus$ {
    /** @deprecated use `ConsoleV1KeysControllerGenDeactivateKeysStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenDeactivateKeysStatus$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeactivateKeysStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenDeactivateKeysStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1KeysControllerGenDeactivateKeysResponseBody$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenDeactivateKeysResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1KeysControllerGenDeactivateKeysStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1KeysControllerGenDeactivateKeysResponseBody(v);
    });

/** @internal */
export type ConsoleV1KeysControllerGenDeactivateKeysResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1KeysControllerGenDeactivateKeysResponseBody$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenDeactivateKeysResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenDeactivateKeysResponseBody
> = z
    .instanceof(ConsoleV1KeysControllerGenDeactivateKeysResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1KeysControllerGenDeactivateKeysStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenDeactivateKeysResponseBody$ {
    /** @deprecated use `ConsoleV1KeysControllerGenDeactivateKeysResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenDeactivateKeysResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeactivateKeysResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1KeysControllerGenDeactivateKeysResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeactivateKeysResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenDeactivateKeysResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1KeysControllerGenDeactivateStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenDeactivateStatus
> = z.nativeEnum(ConsoleV1KeysControllerGenDeactivateStatus);

/** @internal */
export const ConsoleV1KeysControllerGenDeactivateStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenDeactivateStatus
> = ConsoleV1KeysControllerGenDeactivateStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenDeactivateStatus$ {
    /** @deprecated use `ConsoleV1KeysControllerGenDeactivateStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenDeactivateStatus$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeactivateStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenDeactivateStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1KeysControllerGenDeactivateResponseBody$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenDeactivateResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1KeysControllerGenDeactivateStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1KeysControllerGenDeactivateResponseBody(v);
    });

/** @internal */
export type ConsoleV1KeysControllerGenDeactivateResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1KeysControllerGenDeactivateResponseBody$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenDeactivateResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenDeactivateResponseBody
> = z
    .instanceof(ConsoleV1KeysControllerGenDeactivateResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1KeysControllerGenDeactivateStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenDeactivateResponseBody$ {
    /** @deprecated use `ConsoleV1KeysControllerGenDeactivateResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenDeactivateResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeactivateResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenDeactivateResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeactivateResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenDeactivateResponseBody$Outbound;
}
