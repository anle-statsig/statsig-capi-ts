/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus = {
    FourHundredAndFour: 404,
} as const;
export type ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus = ClosedEnum<
    typeof ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus
>;

/**
 * Segment not found.
 */
export type ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBodyData = {
    status: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus;
    message: string;
};

/**
 * Segment not found.
 */
export class ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody extends Error {
    status: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBodyData;

    constructor(err: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody";
    }
}

export const ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus = ClosedEnum<
    typeof ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus
>;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBodyData = {
    status: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus;
    message: string;
};

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody extends Error {
    status: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBodyData;

    constructor(err: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody";
    }
}

export const ConsoleV1SegmentsIDListControllerGenRemoveStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1SegmentsIDListControllerGenRemoveStatus = ClosedEnum<
    typeof ConsoleV1SegmentsIDListControllerGenRemoveStatus
>;

/**
 * Segment must be of type 'id_list' to be modified on this endpoint
 */
export type ConsoleV1SegmentsIDListControllerGenRemoveResponseBodyData = {
    status: ConsoleV1SegmentsIDListControllerGenRemoveStatus;
    message: string;
};

/**
 * Segment must be of type 'id_list' to be modified on this endpoint
 */
export class ConsoleV1SegmentsIDListControllerGenRemoveResponseBody extends Error {
    status: ConsoleV1SegmentsIDListControllerGenRemoveStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1SegmentsIDListControllerGenRemoveResponseBodyData;

    constructor(err: ConsoleV1SegmentsIDListControllerGenRemoveResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1SegmentsIDListControllerGenRemoveResponseBody";
    }
}

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus
> = z.nativeEnum(ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus);

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus
> = ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus$ {
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus$inboundSchema;
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody$inboundSchema: z.ZodType<
    ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody(v);
    });

/** @internal */
export type ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody$outboundSchema: z.ZodType<
    ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody
> = z
    .instanceof(ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody$ {
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus
> = z.nativeEnum(ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus);

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus
> = ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus$ {
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus$inboundSchema;
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody$inboundSchema: z.ZodType<
    ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody(v);
    });

/** @internal */
export type ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody$outboundSchema: z.ZodType<
    ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody
> = z
    .instanceof(ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1SegmentsIDListControllerGenRemoveSegmentsStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody$ {
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1SegmentsIDListControllerGenRemoveSegmentsResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1SegmentsIDListControllerGenRemoveStatus
> = z.nativeEnum(ConsoleV1SegmentsIDListControllerGenRemoveStatus);

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1SegmentsIDListControllerGenRemoveStatus
> = ConsoleV1SegmentsIDListControllerGenRemoveStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1SegmentsIDListControllerGenRemoveStatus$ {
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1SegmentsIDListControllerGenRemoveStatus$inboundSchema;
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1SegmentsIDListControllerGenRemoveStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveResponseBody$inboundSchema: z.ZodType<
    ConsoleV1SegmentsIDListControllerGenRemoveResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1SegmentsIDListControllerGenRemoveStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1SegmentsIDListControllerGenRemoveResponseBody(v);
    });

/** @internal */
export type ConsoleV1SegmentsIDListControllerGenRemoveResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1SegmentsIDListControllerGenRemoveResponseBody$outboundSchema: z.ZodType<
    ConsoleV1SegmentsIDListControllerGenRemoveResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1SegmentsIDListControllerGenRemoveResponseBody
> = z
    .instanceof(ConsoleV1SegmentsIDListControllerGenRemoveResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1SegmentsIDListControllerGenRemoveStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1SegmentsIDListControllerGenRemoveResponseBody$ {
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1SegmentsIDListControllerGenRemoveResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1SegmentsIDListControllerGenRemoveResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1SegmentsIDListControllerGenRemoveResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1SegmentsIDListControllerGenRemoveResponseBody$Outbound;
}
