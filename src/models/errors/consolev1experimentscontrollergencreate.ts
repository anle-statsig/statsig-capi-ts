/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenCreateExperimentsStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1ExperimentsControllerGenCreateExperimentsStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateExperimentsStatus
>;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenCreateExperimentsStatus;
    message: string;
};

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenCreateExperimentsStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenCreateStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1ExperimentsControllerGenCreateStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateStatus
>;

/**
 * Name is already in use
 */
export type ConsoleV1ExperimentsControllerGenCreateResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenCreateStatus;
    message: string;
};

/**
 * Name is already in use
 */
export class ConsoleV1ExperimentsControllerGenCreateResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenCreateStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenCreateResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenCreateResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenCreateResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateExperimentsStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateExperimentsStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenCreateExperimentsStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateExperimentsStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateExperimentsStatus
> = ConsoleV1ExperimentsControllerGenCreateExperimentsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateExperimentsStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateExperimentsStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateExperimentsStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateExperimentsStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateExperimentsStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenCreateExperimentsStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenCreateExperimentsStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1ExperimentsControllerGenCreateExperimentsResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenCreateStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenCreateStatus
> = ConsoleV1ExperimentsControllerGenCreateStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1ExperimentsControllerGenCreateStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1ExperimentsControllerGenCreateStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenCreateStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenCreateResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenCreateResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenCreateResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenCreateResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenCreateResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenCreateResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenCreateStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenCreateResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1ExperimentsControllerGenCreateResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenCreateResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenCreateResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1ExperimentsControllerGenCreateResponseBody$Outbound;
}
