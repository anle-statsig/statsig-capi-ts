/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1HoldoutOverridesControllerGenReadStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1HoldoutOverridesControllerGenReadStatus = ClosedEnum<
    typeof ConsoleV1HoldoutOverridesControllerGenReadStatus
>;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1HoldoutOverridesControllerGenReadResponseBodyData = {
    status: ConsoleV1HoldoutOverridesControllerGenReadStatus;
    message: string;
};

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1HoldoutOverridesControllerGenReadResponseBody extends Error {
    status: ConsoleV1HoldoutOverridesControllerGenReadStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1HoldoutOverridesControllerGenReadResponseBodyData;

    constructor(err: ConsoleV1HoldoutOverridesControllerGenReadResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1HoldoutOverridesControllerGenReadResponseBody";
    }
}

/** @internal */
export const ConsoleV1HoldoutOverridesControllerGenReadStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutOverridesControllerGenReadStatus
> = z.nativeEnum(ConsoleV1HoldoutOverridesControllerGenReadStatus);

/** @internal */
export const ConsoleV1HoldoutOverridesControllerGenReadStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutOverridesControllerGenReadStatus
> = ConsoleV1HoldoutOverridesControllerGenReadStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutOverridesControllerGenReadStatus$ {
    /** @deprecated use `ConsoleV1HoldoutOverridesControllerGenReadStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1HoldoutOverridesControllerGenReadStatus$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutOverridesControllerGenReadStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1HoldoutOverridesControllerGenReadStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1HoldoutOverridesControllerGenReadResponseBody$inboundSchema: z.ZodType<
    ConsoleV1HoldoutOverridesControllerGenReadResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1HoldoutOverridesControllerGenReadStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1HoldoutOverridesControllerGenReadResponseBody(v);
    });

/** @internal */
export type ConsoleV1HoldoutOverridesControllerGenReadResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1HoldoutOverridesControllerGenReadResponseBody$outboundSchema: z.ZodType<
    ConsoleV1HoldoutOverridesControllerGenReadResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1HoldoutOverridesControllerGenReadResponseBody
> = z
    .instanceof(ConsoleV1HoldoutOverridesControllerGenReadResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1HoldoutOverridesControllerGenReadStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutOverridesControllerGenReadResponseBody$ {
    /** @deprecated use `ConsoleV1HoldoutOverridesControllerGenReadResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1HoldoutOverridesControllerGenReadResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutOverridesControllerGenReadResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1HoldoutOverridesControllerGenReadResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1HoldoutOverridesControllerGenReadResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1HoldoutOverridesControllerGenReadResponseBody$Outbound;
}
