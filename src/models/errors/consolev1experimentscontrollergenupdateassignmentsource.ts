/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus =
    {
        FourHundredAndFour: 404,
    } as const;
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus
    >;

/**
 * Not Found. The requested resource could not be found.
 */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus;
        message: string;
    };

/**
 * Not Found. The requested resource could not be found.
 */
export class ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus =
    {
        FourHundredAndOne: 401,
    } as const;
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus
    >;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus;
        message: string;
    };

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus
> =
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus
> =
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceExperimentsWarehouseNativeResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus
> = ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateAssignmentSourceResponseBody$Outbound;
}
