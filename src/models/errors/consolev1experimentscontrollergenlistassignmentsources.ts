/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus =
    {
        FourHundredAndOne: 401,
    } as const;
export type ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus
    >;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus;
        message: string;
    };

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus
> =
    ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenListAssignmentSourcesExperimentsWarehouseNativeResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus
> = ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenListAssignmentSourcesStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenListAssignmentSourcesResponseBody$Outbound;
}
