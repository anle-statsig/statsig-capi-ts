/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus = {
    FourHundredAndFour: 404,
} as const;
export type ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus = ClosedEnum<
    typeof ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus
>;

/**
 * Not Found. The requested resource could not be found.
 */
export type ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBodyData = {
    status: ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus;
    message: string;
};

/**
 * Not Found. The requested resource could not be found.
 */
export class ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody extends Error {
    status: ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBodyData;

    constructor(
        err: ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody";
    }
}

export const ConsoleV1DynamicConfigControllerGenPartialUpdateStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1DynamicConfigControllerGenPartialUpdateStatus = ClosedEnum<
    typeof ConsoleV1DynamicConfigControllerGenPartialUpdateStatus
>;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBodyData = {
    status: ConsoleV1DynamicConfigControllerGenPartialUpdateStatus;
    message: string;
};

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody extends Error {
    status: ConsoleV1DynamicConfigControllerGenPartialUpdateStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBodyData;

    constructor(err: ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody";
    }
}

/** @internal */
export const ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus
> = z.nativeEnum(ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus);

/** @internal */
export const ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus
> = ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus$ {
    /** @deprecated use `ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus$inboundSchema;
    /** @deprecated use `ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody$inboundSchema: z.ZodType<
    ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody(v);
    });

/** @internal */
export type ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody$outboundSchema: z.ZodType<
    ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody
> = z
    .instanceof(ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody$ {
    /** @deprecated use `ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1DynamicConfigControllerGenPartialUpdateDynamicConfigsResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1DynamicConfigControllerGenPartialUpdateStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1DynamicConfigControllerGenPartialUpdateStatus
> = z.nativeEnum(ConsoleV1DynamicConfigControllerGenPartialUpdateStatus);

/** @internal */
export const ConsoleV1DynamicConfigControllerGenPartialUpdateStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1DynamicConfigControllerGenPartialUpdateStatus
> = ConsoleV1DynamicConfigControllerGenPartialUpdateStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1DynamicConfigControllerGenPartialUpdateStatus$ {
    /** @deprecated use `ConsoleV1DynamicConfigControllerGenPartialUpdateStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1DynamicConfigControllerGenPartialUpdateStatus$inboundSchema;
    /** @deprecated use `ConsoleV1DynamicConfigControllerGenPartialUpdateStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1DynamicConfigControllerGenPartialUpdateStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody$inboundSchema: z.ZodType<
    ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1DynamicConfigControllerGenPartialUpdateStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody(v);
    });

/** @internal */
export type ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody$outboundSchema: z.ZodType<
    ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody
> = z
    .instanceof(ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1DynamicConfigControllerGenPartialUpdateStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody$ {
    /** @deprecated use `ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1DynamicConfigControllerGenPartialUpdateResponseBody$Outbound;
}
