/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus =
    {
        FourHundredAndFour: 404,
    } as const;
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus
    >;

/**
 * Not Found. The requested resource could not be found.
 */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus;
        message: string;
    };

/**
 * Not Found. The requested resource could not be found.
 */
export class ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus =
    {
        FourHundredAndOne: 401,
    } as const;
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus =
    ClosedEnum<
        typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus
    >;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBodyData =
    {
        status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus;
        message: string;
    };

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus
> =
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus
> = z.nativeEnum(
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus
);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus
> =
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody
> = z
    .instanceof(
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody
    )
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceExperimentsWarehouseNativeResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus
> = ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenUpdateEntityPropertySourceResponseBody$Outbound;
}
