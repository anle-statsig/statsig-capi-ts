/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1KeysControllerGenRotateKeysStatus = {
    FourHundredAndFour: 404,
} as const;
export type ConsoleV1KeysControllerGenRotateKeysStatus = ClosedEnum<
    typeof ConsoleV1KeysControllerGenRotateKeysStatus
>;

/**
 * Key not found.
 */
export type ConsoleV1KeysControllerGenRotateKeysResponseBodyData = {
    status: ConsoleV1KeysControllerGenRotateKeysStatus;
    message: string;
};

/**
 * Key not found.
 */
export class ConsoleV1KeysControllerGenRotateKeysResponseBody extends Error {
    status: ConsoleV1KeysControllerGenRotateKeysStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1KeysControllerGenRotateKeysResponseBodyData;

    constructor(err: ConsoleV1KeysControllerGenRotateKeysResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1KeysControllerGenRotateKeysResponseBody";
    }
}

export const ConsoleV1KeysControllerGenRotateStatus = {
    FourHundredAndThree: 403,
} as const;
export type ConsoleV1KeysControllerGenRotateStatus = ClosedEnum<
    typeof ConsoleV1KeysControllerGenRotateStatus
>;

/**
 * Insufficient permissions.
 */
export type ConsoleV1KeysControllerGenRotateResponseBodyData = {
    status: ConsoleV1KeysControllerGenRotateStatus;
    message: string;
};

/**
 * Insufficient permissions.
 */
export class ConsoleV1KeysControllerGenRotateResponseBody extends Error {
    status: ConsoleV1KeysControllerGenRotateStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1KeysControllerGenRotateResponseBodyData;

    constructor(err: ConsoleV1KeysControllerGenRotateResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1KeysControllerGenRotateResponseBody";
    }
}

/** @internal */
export const ConsoleV1KeysControllerGenRotateKeysStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenRotateKeysStatus
> = z.nativeEnum(ConsoleV1KeysControllerGenRotateKeysStatus);

/** @internal */
export const ConsoleV1KeysControllerGenRotateKeysStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenRotateKeysStatus
> = ConsoleV1KeysControllerGenRotateKeysStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenRotateKeysStatus$ {
    /** @deprecated use `ConsoleV1KeysControllerGenRotateKeysStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenRotateKeysStatus$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenRotateKeysStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenRotateKeysStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1KeysControllerGenRotateKeysResponseBody$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenRotateKeysResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1KeysControllerGenRotateKeysStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1KeysControllerGenRotateKeysResponseBody(v);
    });

/** @internal */
export type ConsoleV1KeysControllerGenRotateKeysResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1KeysControllerGenRotateKeysResponseBody$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenRotateKeysResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenRotateKeysResponseBody
> = z
    .instanceof(ConsoleV1KeysControllerGenRotateKeysResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1KeysControllerGenRotateKeysStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenRotateKeysResponseBody$ {
    /** @deprecated use `ConsoleV1KeysControllerGenRotateKeysResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenRotateKeysResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenRotateKeysResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenRotateKeysResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenRotateKeysResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenRotateKeysResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1KeysControllerGenRotateStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenRotateStatus
> = z.nativeEnum(ConsoleV1KeysControllerGenRotateStatus);

/** @internal */
export const ConsoleV1KeysControllerGenRotateStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenRotateStatus
> = ConsoleV1KeysControllerGenRotateStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenRotateStatus$ {
    /** @deprecated use `ConsoleV1KeysControllerGenRotateStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenRotateStatus$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenRotateStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenRotateStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1KeysControllerGenRotateResponseBody$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenRotateResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1KeysControllerGenRotateStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1KeysControllerGenRotateResponseBody(v);
    });

/** @internal */
export type ConsoleV1KeysControllerGenRotateResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1KeysControllerGenRotateResponseBody$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenRotateResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenRotateResponseBody
> = z
    .instanceof(ConsoleV1KeysControllerGenRotateResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1KeysControllerGenRotateStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenRotateResponseBody$ {
    /** @deprecated use `ConsoleV1KeysControllerGenRotateResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenRotateResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenRotateResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenRotateResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenRotateResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenRotateResponseBody$Outbound;
}
