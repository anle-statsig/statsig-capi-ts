/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus = {
    FourHundredAndFour: 404,
} as const;
export type ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus = ClosedEnum<
    typeof ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus
>;

/**
 * Not Found Exception
 */
export type ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBodyData = {
    status: ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus;
    message: string;
};

/**
 * Not Found Exception
 */
export class ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody extends Error {
    status: ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBodyData;

    constructor(err: ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody";
    }
}

export const ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus = ClosedEnum<
    typeof ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus
>;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBodyData = {
    status: ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus;
    message: string;
};

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody extends Error {
    status: ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBodyData;

    constructor(err: ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody";
    }
}

export const ConsoleV1HoldoutsControllerGenCreateStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1HoldoutsControllerGenCreateStatus = ClosedEnum<
    typeof ConsoleV1HoldoutsControllerGenCreateStatus
>;

/**
 * Name is already in use
 */
export type ConsoleV1HoldoutsControllerGenCreateResponseBodyData = {
    status: ConsoleV1HoldoutsControllerGenCreateStatus;
    message: string;
};

/**
 * Name is already in use
 */
export class ConsoleV1HoldoutsControllerGenCreateResponseBody extends Error {
    status: ConsoleV1HoldoutsControllerGenCreateStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1HoldoutsControllerGenCreateResponseBodyData;

    constructor(err: ConsoleV1HoldoutsControllerGenCreateResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1HoldoutsControllerGenCreateResponseBody";
    }
}

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus
> = z.nativeEnum(ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus);

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus
> = ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus$ {
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody$inboundSchema: z.ZodType<
    ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody(v);
    });

/** @internal */
export type ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody$outboundSchema: z.ZodType<
    ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody
> = z
    .instanceof(ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody$ {
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus
> = z.nativeEnum(ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus);

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus
> = ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus$ {
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody$inboundSchema: z.ZodType<
    ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody(v);
    });

/** @internal */
export type ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody$outboundSchema: z.ZodType<
    ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody
> = z
    .instanceof(ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1HoldoutsControllerGenCreateHoldoutsStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody$ {
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1HoldoutsControllerGenCreateHoldoutsResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutsControllerGenCreateStatus
> = z.nativeEnum(ConsoleV1HoldoutsControllerGenCreateStatus);

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1HoldoutsControllerGenCreateStatus
> = ConsoleV1HoldoutsControllerGenCreateStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutsControllerGenCreateStatus$ {
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1HoldoutsControllerGenCreateStatus$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1HoldoutsControllerGenCreateStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateResponseBody$inboundSchema: z.ZodType<
    ConsoleV1HoldoutsControllerGenCreateResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1HoldoutsControllerGenCreateStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1HoldoutsControllerGenCreateResponseBody(v);
    });

/** @internal */
export type ConsoleV1HoldoutsControllerGenCreateResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1HoldoutsControllerGenCreateResponseBody$outboundSchema: z.ZodType<
    ConsoleV1HoldoutsControllerGenCreateResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1HoldoutsControllerGenCreateResponseBody
> = z
    .instanceof(ConsoleV1HoldoutsControllerGenCreateResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1HoldoutsControllerGenCreateStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1HoldoutsControllerGenCreateResponseBody$ {
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1HoldoutsControllerGenCreateResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1HoldoutsControllerGenCreateResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1HoldoutsControllerGenCreateResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1HoldoutsControllerGenCreateResponseBody$Outbound;
}
