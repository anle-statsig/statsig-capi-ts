/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1KeysControllerGenDeleteKeysStatus = {
    FourHundredAndFour: 404,
} as const;
export type ConsoleV1KeysControllerGenDeleteKeysStatus = ClosedEnum<
    typeof ConsoleV1KeysControllerGenDeleteKeysStatus
>;

/**
 * Key not found.
 */
export type ConsoleV1KeysControllerGenDeleteKeysResponseBodyData = {
    status: ConsoleV1KeysControllerGenDeleteKeysStatus;
    message: string;
};

/**
 * Key not found.
 */
export class ConsoleV1KeysControllerGenDeleteKeysResponseBody extends Error {
    status: ConsoleV1KeysControllerGenDeleteKeysStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1KeysControllerGenDeleteKeysResponseBodyData;

    constructor(err: ConsoleV1KeysControllerGenDeleteKeysResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1KeysControllerGenDeleteKeysResponseBody";
    }
}

export const ConsoleV1KeysControllerGenDeleteStatus = {
    FourHundredAndThree: 403,
} as const;
export type ConsoleV1KeysControllerGenDeleteStatus = ClosedEnum<
    typeof ConsoleV1KeysControllerGenDeleteStatus
>;

/**
 * Insufficient permissions.
 */
export type ConsoleV1KeysControllerGenDeleteResponseBodyData = {
    status: ConsoleV1KeysControllerGenDeleteStatus;
    message: string;
};

/**
 * Insufficient permissions.
 */
export class ConsoleV1KeysControllerGenDeleteResponseBody extends Error {
    status: ConsoleV1KeysControllerGenDeleteStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1KeysControllerGenDeleteResponseBodyData;

    constructor(err: ConsoleV1KeysControllerGenDeleteResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1KeysControllerGenDeleteResponseBody";
    }
}

/** @internal */
export const ConsoleV1KeysControllerGenDeleteKeysStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenDeleteKeysStatus
> = z.nativeEnum(ConsoleV1KeysControllerGenDeleteKeysStatus);

/** @internal */
export const ConsoleV1KeysControllerGenDeleteKeysStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenDeleteKeysStatus
> = ConsoleV1KeysControllerGenDeleteKeysStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenDeleteKeysStatus$ {
    /** @deprecated use `ConsoleV1KeysControllerGenDeleteKeysStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenDeleteKeysStatus$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeleteKeysStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenDeleteKeysStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1KeysControllerGenDeleteKeysResponseBody$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenDeleteKeysResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1KeysControllerGenDeleteKeysStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1KeysControllerGenDeleteKeysResponseBody(v);
    });

/** @internal */
export type ConsoleV1KeysControllerGenDeleteKeysResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1KeysControllerGenDeleteKeysResponseBody$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenDeleteKeysResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenDeleteKeysResponseBody
> = z
    .instanceof(ConsoleV1KeysControllerGenDeleteKeysResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1KeysControllerGenDeleteKeysStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenDeleteKeysResponseBody$ {
    /** @deprecated use `ConsoleV1KeysControllerGenDeleteKeysResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenDeleteKeysResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeleteKeysResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenDeleteKeysResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeleteKeysResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenDeleteKeysResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1KeysControllerGenDeleteStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenDeleteStatus
> = z.nativeEnum(ConsoleV1KeysControllerGenDeleteStatus);

/** @internal */
export const ConsoleV1KeysControllerGenDeleteStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1KeysControllerGenDeleteStatus
> = ConsoleV1KeysControllerGenDeleteStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenDeleteStatus$ {
    /** @deprecated use `ConsoleV1KeysControllerGenDeleteStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenDeleteStatus$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeleteStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenDeleteStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1KeysControllerGenDeleteResponseBody$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenDeleteResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1KeysControllerGenDeleteStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1KeysControllerGenDeleteResponseBody(v);
    });

/** @internal */
export type ConsoleV1KeysControllerGenDeleteResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1KeysControllerGenDeleteResponseBody$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenDeleteResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenDeleteResponseBody
> = z
    .instanceof(ConsoleV1KeysControllerGenDeleteResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1KeysControllerGenDeleteStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenDeleteResponseBody$ {
    /** @deprecated use `ConsoleV1KeysControllerGenDeleteResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenDeleteResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeleteResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenDeleteResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenDeleteResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenDeleteResponseBody$Outbound;
}
