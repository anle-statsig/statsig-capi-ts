/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus = {
    FourHundredAndFour: 404,
} as const;
export type ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus
>;

/**
 * Experiment not found.
 */
export type ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus;
    message: string;
};

/**
 * Experiment not found.
 */
export class ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenPartialUpdateStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1ExperimentsControllerGenPartialUpdateStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenPartialUpdateStatus
>;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenPartialUpdateResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenPartialUpdateStatus;
    message: string;
};

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenPartialUpdateStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenPartialUpdateResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenPartialUpdateResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus
> = ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenPartialUpdateExperimentsResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenPartialUpdateStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenPartialUpdateStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenPartialUpdateStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenPartialUpdateStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenPartialUpdateStatus
> = ConsoleV1ExperimentsControllerGenPartialUpdateStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenPartialUpdateStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenPartialUpdateStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1ExperimentsControllerGenPartialUpdateStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenPartialUpdateStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenPartialUpdateStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenPartialUpdateStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenPartialUpdateStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1ExperimentsControllerGenPartialUpdateResponseBody$Outbound;
}
