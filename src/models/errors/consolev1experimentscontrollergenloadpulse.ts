/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus = {
    FourHundredAndOne: 401,
} as const;
export type ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus
>;

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export type ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus;
    message: string;
};

/**
 * This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx
 */
export class ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBodyData;

    constructor(
        err: ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBodyData
    ) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name =
            "ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody";
    }
}

export const ConsoleV1ExperimentsControllerGenLoadPulseStatus = {
    FourHundred: 400,
} as const;
export type ConsoleV1ExperimentsControllerGenLoadPulseStatus = ClosedEnum<
    typeof ConsoleV1ExperimentsControllerGenLoadPulseStatus
>;

/**
 * Invalid request. Please check the request input and try again.
 */
export type ConsoleV1ExperimentsControllerGenLoadPulseResponseBodyData = {
    status: ConsoleV1ExperimentsControllerGenLoadPulseStatus;
    message: string;
};

/**
 * Invalid request. Please check the request input and try again.
 */
export class ConsoleV1ExperimentsControllerGenLoadPulseResponseBody extends Error {
    status: ConsoleV1ExperimentsControllerGenLoadPulseStatus;

    /** The original data that was passed to this error instance. */
    data$: ConsoleV1ExperimentsControllerGenLoadPulseResponseBodyData;

    constructor(err: ConsoleV1ExperimentsControllerGenLoadPulseResponseBodyData) {
        const message =
            "message" in err && typeof err.message === "string"
                ? err.message
                : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;

        this.status = err.status;

        this.name = "ConsoleV1ExperimentsControllerGenLoadPulseResponseBody";
    }
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus
> = ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody(
            v
        );
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody$Outbound =
    {
        status: number;
        message: string;
    };

/** @internal */
export const ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1ExperimentsControllerGenLoadPulseExperimentsWarehouseNativeResponseBody$Outbound;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenLoadPulseStatus$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenLoadPulseStatus
> = z.nativeEnum(ConsoleV1ExperimentsControllerGenLoadPulseStatus);

/** @internal */
export const ConsoleV1ExperimentsControllerGenLoadPulseStatus$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1ExperimentsControllerGenLoadPulseStatus
> = ConsoleV1ExperimentsControllerGenLoadPulseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenLoadPulseStatus$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenLoadPulseStatus$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1ExperimentsControllerGenLoadPulseStatus$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenLoadPulseStatus$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1ExperimentsControllerGenLoadPulseStatus$outboundSchema;
}

/** @internal */
export const ConsoleV1ExperimentsControllerGenLoadPulseResponseBody$inboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenLoadPulseResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: ConsoleV1ExperimentsControllerGenLoadPulseStatus$inboundSchema,
        message: z.string(),
    })
    .transform((v) => {
        return new ConsoleV1ExperimentsControllerGenLoadPulseResponseBody(v);
    });

/** @internal */
export type ConsoleV1ExperimentsControllerGenLoadPulseResponseBody$Outbound = {
    status: number;
    message: string;
};

/** @internal */
export const ConsoleV1ExperimentsControllerGenLoadPulseResponseBody$outboundSchema: z.ZodType<
    ConsoleV1ExperimentsControllerGenLoadPulseResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1ExperimentsControllerGenLoadPulseResponseBody
> = z
    .instanceof(ConsoleV1ExperimentsControllerGenLoadPulseResponseBody)
    .transform((v) => v.data$)
    .pipe(
        z.object({
            status: ConsoleV1ExperimentsControllerGenLoadPulseStatus$outboundSchema,
            message: z.string(),
        })
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1ExperimentsControllerGenLoadPulseResponseBody$ {
    /** @deprecated use `ConsoleV1ExperimentsControllerGenLoadPulseResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1ExperimentsControllerGenLoadPulseResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenLoadPulseResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1ExperimentsControllerGenLoadPulseResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1ExperimentsControllerGenLoadPulseResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1ExperimentsControllerGenLoadPulseResponseBody$Outbound;
}
