/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type AssignmentSourcePartialUpdateDtoIdTypeMapping = {
    /**
     * ID for the Statsig unit.
     */
    statsigUnitID: string;
    /**
     * Column name associated with the ID type mapping.
     */
    column: string;
};

export type AssignmentSourcePartialUpdateDto = {
    /**
     * Unique identifier for the assignment source.
     */
    name?: string | undefined;
    /**
     * Detailed context and purpose of the assignment source.
     */
    description?: string | undefined;
    /**
     * Marks the assignment source as verified for internal trustworthiness.
     */
    isVerified?: boolean | undefined;
    /**
     * Tags for categorization and search.
     */
    tags?: Array<string> | undefined;
    /**
     * SQL query defining the data source.
     */
    sql?: string | undefined;
    /**
     * Column name representing the timestamp of assignments.
     */
    timestampColumn?: string | undefined;
    /**
     * Column name for the experiment ID associated with the assignments.
     */
    experimentIDColumn?: string | undefined;
    /**
     * Column name for the group ID linked to the assignments.
     */
    groupIDColumn?: string | undefined;
    /**
     * Mappings of Statsig units to their respective columns.
     */
    idTypeMapping?: Array<AssignmentSourcePartialUpdateDtoIdTypeMapping> | undefined;
};

/** @internal */
export const AssignmentSourcePartialUpdateDtoIdTypeMapping$inboundSchema: z.ZodType<
    AssignmentSourcePartialUpdateDtoIdTypeMapping,
    z.ZodTypeDef,
    unknown
> = z.object({
    statsigUnitID: z.string(),
    column: z.string(),
});

/** @internal */
export type AssignmentSourcePartialUpdateDtoIdTypeMapping$Outbound = {
    statsigUnitID: string;
    column: string;
};

/** @internal */
export const AssignmentSourcePartialUpdateDtoIdTypeMapping$outboundSchema: z.ZodType<
    AssignmentSourcePartialUpdateDtoIdTypeMapping$Outbound,
    z.ZodTypeDef,
    AssignmentSourcePartialUpdateDtoIdTypeMapping
> = z.object({
    statsigUnitID: z.string(),
    column: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssignmentSourcePartialUpdateDtoIdTypeMapping$ {
    /** @deprecated use `AssignmentSourcePartialUpdateDtoIdTypeMapping$inboundSchema` instead. */
    export const inboundSchema = AssignmentSourcePartialUpdateDtoIdTypeMapping$inboundSchema;
    /** @deprecated use `AssignmentSourcePartialUpdateDtoIdTypeMapping$outboundSchema` instead. */
    export const outboundSchema = AssignmentSourcePartialUpdateDtoIdTypeMapping$outboundSchema;
    /** @deprecated use `AssignmentSourcePartialUpdateDtoIdTypeMapping$Outbound` instead. */
    export type Outbound = AssignmentSourcePartialUpdateDtoIdTypeMapping$Outbound;
}

/** @internal */
export const AssignmentSourcePartialUpdateDto$inboundSchema: z.ZodType<
    AssignmentSourcePartialUpdateDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: z.string().optional(),
    description: z.string().optional(),
    isVerified: z.boolean().optional(),
    tags: z.array(z.string()).optional(),
    sql: z.string().optional(),
    timestampColumn: z.string().optional(),
    experimentIDColumn: z.string().optional(),
    groupIDColumn: z.string().optional(),
    idTypeMapping: z
        .array(z.lazy(() => AssignmentSourcePartialUpdateDtoIdTypeMapping$inboundSchema))
        .optional(),
});

/** @internal */
export type AssignmentSourcePartialUpdateDto$Outbound = {
    name?: string | undefined;
    description?: string | undefined;
    isVerified?: boolean | undefined;
    tags?: Array<string> | undefined;
    sql?: string | undefined;
    timestampColumn?: string | undefined;
    experimentIDColumn?: string | undefined;
    groupIDColumn?: string | undefined;
    idTypeMapping?: Array<AssignmentSourcePartialUpdateDtoIdTypeMapping$Outbound> | undefined;
};

/** @internal */
export const AssignmentSourcePartialUpdateDto$outboundSchema: z.ZodType<
    AssignmentSourcePartialUpdateDto$Outbound,
    z.ZodTypeDef,
    AssignmentSourcePartialUpdateDto
> = z.object({
    name: z.string().optional(),
    description: z.string().optional(),
    isVerified: z.boolean().optional(),
    tags: z.array(z.string()).optional(),
    sql: z.string().optional(),
    timestampColumn: z.string().optional(),
    experimentIDColumn: z.string().optional(),
    groupIDColumn: z.string().optional(),
    idTypeMapping: z
        .array(z.lazy(() => AssignmentSourcePartialUpdateDtoIdTypeMapping$outboundSchema))
        .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssignmentSourcePartialUpdateDto$ {
    /** @deprecated use `AssignmentSourcePartialUpdateDto$inboundSchema` instead. */
    export const inboundSchema = AssignmentSourcePartialUpdateDto$inboundSchema;
    /** @deprecated use `AssignmentSourcePartialUpdateDto$outboundSchema` instead. */
    export const outboundSchema = AssignmentSourcePartialUpdateDto$outboundSchema;
    /** @deprecated use `AssignmentSourcePartialUpdateDto$Outbound` instead. */
    export type Outbound = AssignmentSourcePartialUpdateDto$Outbound;
}
