/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ChangeValidationDto = {
    name: string;
    validated: boolean;
};

/** @internal */
export const ChangeValidationDto$inboundSchema: z.ZodType<
    ChangeValidationDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: z.string(),
    validated: z.boolean(),
});

/** @internal */
export type ChangeValidationDto$Outbound = {
    name: string;
    validated: boolean;
};

/** @internal */
export const ChangeValidationDto$outboundSchema: z.ZodType<
    ChangeValidationDto$Outbound,
    z.ZodTypeDef,
    ChangeValidationDto
> = z.object({
    name: z.string(),
    validated: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChangeValidationDto$ {
    /** @deprecated use `ChangeValidationDto$inboundSchema` instead. */
    export const inboundSchema = ChangeValidationDto$inboundSchema;
    /** @deprecated use `ChangeValidationDto$outboundSchema` instead. */
    export const outboundSchema = ChangeValidationDto$outboundSchema;
    /** @deprecated use `ChangeValidationDto$Outbound` instead. */
    export type Outbound = ChangeValidationDto$Outbound;
}
