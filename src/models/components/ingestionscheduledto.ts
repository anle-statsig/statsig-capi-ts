/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type IngestionScheduleDto = {
    dataset: string;
    scheduledHourPst: number;
};

/** @internal */
export const IngestionScheduleDto$inboundSchema: z.ZodType<
    IngestionScheduleDto,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        dataset: z.string(),
        scheduled_hour_pst: z.number(),
    })
    .transform((v) => {
        return remap$(v, {
            scheduled_hour_pst: "scheduledHourPst",
        });
    });

/** @internal */
export type IngestionScheduleDto$Outbound = {
    dataset: string;
    scheduled_hour_pst: number;
};

/** @internal */
export const IngestionScheduleDto$outboundSchema: z.ZodType<
    IngestionScheduleDto$Outbound,
    z.ZodTypeDef,
    IngestionScheduleDto
> = z
    .object({
        dataset: z.string(),
        scheduledHourPst: z.number(),
    })
    .transform((v) => {
        return remap$(v, {
            scheduledHourPst: "scheduled_hour_pst",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IngestionScheduleDto$ {
    /** @deprecated use `IngestionScheduleDto$inboundSchema` instead. */
    export const inboundSchema = IngestionScheduleDto$inboundSchema;
    /** @deprecated use `IngestionScheduleDto$outboundSchema` instead. */
    export const outboundSchema = IngestionScheduleDto$outboundSchema;
    /** @deprecated use `IngestionScheduleDto$Outbound` instead. */
    export type Outbound = IngestionScheduleDto$Outbound;
}
