/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ArchiveSchemaDto = {
    forceArchive?: boolean | undefined;
};

/** @internal */
export const ArchiveSchemaDto$inboundSchema: z.ZodType<ArchiveSchemaDto, z.ZodTypeDef, unknown> =
    z.object({
        forceArchive: z.boolean().optional(),
    });

/** @internal */
export type ArchiveSchemaDto$Outbound = {
    forceArchive?: boolean | undefined;
};

/** @internal */
export const ArchiveSchemaDto$outboundSchema: z.ZodType<
    ArchiveSchemaDto$Outbound,
    z.ZodTypeDef,
    ArchiveSchemaDto
> = z.object({
    forceArchive: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ArchiveSchemaDto$ {
    /** @deprecated use `ArchiveSchemaDto$inboundSchema` instead. */
    export const inboundSchema = ArchiveSchemaDto$inboundSchema;
    /** @deprecated use `ArchiveSchemaDto$outboundSchema` instead. */
    export const outboundSchema = ArchiveSchemaDto$outboundSchema;
    /** @deprecated use `ArchiveSchemaDto$Outbound` instead. */
    export type Outbound = ArchiveSchemaDto$Outbound;
}
