/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type TagCreateDto = {
    name: string;
    description: string;
    isCore?: boolean | undefined;
};

/** @internal */
export const TagCreateDto$inboundSchema: z.ZodType<TagCreateDto, z.ZodTypeDef, unknown> = z.object({
    name: z.string(),
    description: z.string(),
    isCore: z.boolean().default(false),
});

/** @internal */
export type TagCreateDto$Outbound = {
    name: string;
    description: string;
    isCore: boolean;
};

/** @internal */
export const TagCreateDto$outboundSchema: z.ZodType<
    TagCreateDto$Outbound,
    z.ZodTypeDef,
    TagCreateDto
> = z.object({
    name: z.string(),
    description: z.string(),
    isCore: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TagCreateDto$ {
    /** @deprecated use `TagCreateDto$inboundSchema` instead. */
    export const inboundSchema = TagCreateDto$inboundSchema;
    /** @deprecated use `TagCreateDto$outboundSchema` instead. */
    export const outboundSchema = TagCreateDto$outboundSchema;
    /** @deprecated use `TagCreateDto$Outbound` instead. */
    export type Outbound = TagCreateDto$Outbound;
}
