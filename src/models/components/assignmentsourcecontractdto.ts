/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type AssignmentSourceContractDtoIdTypeMapping = {
    /**
     * ID for the Statsig unit.
     */
    statsigUnitID: string;
    /**
     * Column name associated with the ID type mapping.
     */
    column: string;
};

export type AssignmentSourceContractDto = {
    /**
     * Unique identifier for the assignment source.
     */
    name: string;
    /**
     * Detailed context and purpose of the assignment source.
     */
    description: string;
    /**
     * Marks the assignment source as verified for internal trustworthiness.
     */
    isVerified?: boolean | undefined;
    /**
     * Tags for categorization and search.
     */
    tags: Array<string>;
    /**
     * SQL query defining the data source for assignments.
     */
    sql: string;
    /**
     * Column name representing the timestamp of assignments.
     */
    timestampColumn: string;
    /**
     * Column name for the experiment ID associated with the assignments.
     */
    experimentIDColumn: string;
    /**
     * Column name for the group ID linked to the assignments.
     */
    groupIDColumn: string;
    /**
     * Mappings of Statsig units to their respective columns.
     */
    idTypeMapping: Array<AssignmentSourceContractDtoIdTypeMapping>;
};

/** @internal */
export const AssignmentSourceContractDtoIdTypeMapping$inboundSchema: z.ZodType<
    AssignmentSourceContractDtoIdTypeMapping,
    z.ZodTypeDef,
    unknown
> = z.object({
    statsigUnitID: z.string(),
    column: z.string(),
});

/** @internal */
export type AssignmentSourceContractDtoIdTypeMapping$Outbound = {
    statsigUnitID: string;
    column: string;
};

/** @internal */
export const AssignmentSourceContractDtoIdTypeMapping$outboundSchema: z.ZodType<
    AssignmentSourceContractDtoIdTypeMapping$Outbound,
    z.ZodTypeDef,
    AssignmentSourceContractDtoIdTypeMapping
> = z.object({
    statsigUnitID: z.string(),
    column: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssignmentSourceContractDtoIdTypeMapping$ {
    /** @deprecated use `AssignmentSourceContractDtoIdTypeMapping$inboundSchema` instead. */
    export const inboundSchema = AssignmentSourceContractDtoIdTypeMapping$inboundSchema;
    /** @deprecated use `AssignmentSourceContractDtoIdTypeMapping$outboundSchema` instead. */
    export const outboundSchema = AssignmentSourceContractDtoIdTypeMapping$outboundSchema;
    /** @deprecated use `AssignmentSourceContractDtoIdTypeMapping$Outbound` instead. */
    export type Outbound = AssignmentSourceContractDtoIdTypeMapping$Outbound;
}

/** @internal */
export const AssignmentSourceContractDto$inboundSchema: z.ZodType<
    AssignmentSourceContractDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: z.string(),
    description: z.string(),
    isVerified: z.boolean().optional(),
    tags: z.array(z.string()),
    sql: z.string(),
    timestampColumn: z.string(),
    experimentIDColumn: z.string(),
    groupIDColumn: z.string(),
    idTypeMapping: z.array(z.lazy(() => AssignmentSourceContractDtoIdTypeMapping$inboundSchema)),
});

/** @internal */
export type AssignmentSourceContractDto$Outbound = {
    name: string;
    description: string;
    isVerified?: boolean | undefined;
    tags: Array<string>;
    sql: string;
    timestampColumn: string;
    experimentIDColumn: string;
    groupIDColumn: string;
    idTypeMapping: Array<AssignmentSourceContractDtoIdTypeMapping$Outbound>;
};

/** @internal */
export const AssignmentSourceContractDto$outboundSchema: z.ZodType<
    AssignmentSourceContractDto$Outbound,
    z.ZodTypeDef,
    AssignmentSourceContractDto
> = z.object({
    name: z.string(),
    description: z.string(),
    isVerified: z.boolean().optional(),
    tags: z.array(z.string()),
    sql: z.string(),
    timestampColumn: z.string(),
    experimentIDColumn: z.string(),
    groupIDColumn: z.string(),
    idTypeMapping: z.array(z.lazy(() => AssignmentSourceContractDtoIdTypeMapping$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssignmentSourceContractDto$ {
    /** @deprecated use `AssignmentSourceContractDto$inboundSchema` instead. */
    export const inboundSchema = AssignmentSourceContractDto$inboundSchema;
    /** @deprecated use `AssignmentSourceContractDto$outboundSchema` instead. */
    export const outboundSchema = AssignmentSourceContractDto$outboundSchema;
    /** @deprecated use `AssignmentSourceContractDto$Outbound` instead. */
    export type Outbound = AssignmentSourceContractDto$Outbound;
}
