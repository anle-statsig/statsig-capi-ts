/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Gates = {
    id: string;
    pastDay: number;
    past7Days: number;
};

export type Experiments = {
    id: string;
    pastDay: number;
    past7Days: number;
};

export type ExposureCountDto = {
    /**
     * ids of gates to query (max 25)
     */
    gates: Array<Gates>;
    /**
     * ids of experiments to query (max 25)
     */
    experiments: Array<Experiments>;
};

/** @internal */
export const Gates$inboundSchema: z.ZodType<Gates, z.ZodTypeDef, unknown> = z.object({
    id: z.string(),
    pastDay: z.number(),
    past7Days: z.number(),
});

/** @internal */
export type Gates$Outbound = {
    id: string;
    pastDay: number;
    past7Days: number;
};

/** @internal */
export const Gates$outboundSchema: z.ZodType<Gates$Outbound, z.ZodTypeDef, Gates> = z.object({
    id: z.string(),
    pastDay: z.number(),
    past7Days: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Gates$ {
    /** @deprecated use `Gates$inboundSchema` instead. */
    export const inboundSchema = Gates$inboundSchema;
    /** @deprecated use `Gates$outboundSchema` instead. */
    export const outboundSchema = Gates$outboundSchema;
    /** @deprecated use `Gates$Outbound` instead. */
    export type Outbound = Gates$Outbound;
}

/** @internal */
export const Experiments$inboundSchema: z.ZodType<Experiments, z.ZodTypeDef, unknown> = z.object({
    id: z.string(),
    pastDay: z.number(),
    past7Days: z.number(),
});

/** @internal */
export type Experiments$Outbound = {
    id: string;
    pastDay: number;
    past7Days: number;
};

/** @internal */
export const Experiments$outboundSchema: z.ZodType<
    Experiments$Outbound,
    z.ZodTypeDef,
    Experiments
> = z.object({
    id: z.string(),
    pastDay: z.number(),
    past7Days: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Experiments$ {
    /** @deprecated use `Experiments$inboundSchema` instead. */
    export const inboundSchema = Experiments$inboundSchema;
    /** @deprecated use `Experiments$outboundSchema` instead. */
    export const outboundSchema = Experiments$outboundSchema;
    /** @deprecated use `Experiments$Outbound` instead. */
    export type Outbound = Experiments$Outbound;
}

/** @internal */
export const ExposureCountDto$inboundSchema: z.ZodType<ExposureCountDto, z.ZodTypeDef, unknown> =
    z.object({
        gates: z.array(z.lazy(() => Gates$inboundSchema)),
        experiments: z.array(z.lazy(() => Experiments$inboundSchema)),
    });

/** @internal */
export type ExposureCountDto$Outbound = {
    gates: Array<Gates$Outbound>;
    experiments: Array<Experiments$Outbound>;
};

/** @internal */
export const ExposureCountDto$outboundSchema: z.ZodType<
    ExposureCountDto$Outbound,
    z.ZodTypeDef,
    ExposureCountDto
> = z.object({
    gates: z.array(z.lazy(() => Gates$outboundSchema)),
    experiments: z.array(z.lazy(() => Experiments$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExposureCountDto$ {
    /** @deprecated use `ExposureCountDto$inboundSchema` instead. */
    export const inboundSchema = ExposureCountDto$inboundSchema;
    /** @deprecated use `ExposureCountDto$outboundSchema` instead. */
    export const outboundSchema = ExposureCountDto$outboundSchema;
    /** @deprecated use `ExposureCountDto$Outbound` instead. */
    export type Outbound = ExposureCountDto$Outbound;
}
