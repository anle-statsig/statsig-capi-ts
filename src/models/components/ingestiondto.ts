/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Data = {};

export type IngestionDto = {
    id: string;
    type: string;
    enabled: boolean;
    data: Data;
};

/** @internal */
export const Data$inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown> = z.object({});

/** @internal */
export type Data$Outbound = {};

/** @internal */
export const Data$outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Data$ {
    /** @deprecated use `Data$inboundSchema` instead. */
    export const inboundSchema = Data$inboundSchema;
    /** @deprecated use `Data$outboundSchema` instead. */
    export const outboundSchema = Data$outboundSchema;
    /** @deprecated use `Data$Outbound` instead. */
    export type Outbound = Data$Outbound;
}

/** @internal */
export const IngestionDto$inboundSchema: z.ZodType<IngestionDto, z.ZodTypeDef, unknown> = z.object({
    id: z.string(),
    type: z.string(),
    enabled: z.boolean(),
    data: z.lazy(() => Data$inboundSchema),
});

/** @internal */
export type IngestionDto$Outbound = {
    id: string;
    type: string;
    enabled: boolean;
    data: Data$Outbound;
};

/** @internal */
export const IngestionDto$outboundSchema: z.ZodType<
    IngestionDto$Outbound,
    z.ZodTypeDef,
    IngestionDto
> = z.object({
    id: z.string(),
    type: z.string(),
    enabled: z.boolean(),
    data: z.lazy(() => Data$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IngestionDto$ {
    /** @deprecated use `IngestionDto$inboundSchema` instead. */
    export const inboundSchema = IngestionDto$inboundSchema;
    /** @deprecated use `IngestionDto$outboundSchema` instead. */
    export const outboundSchema = IngestionDto$outboundSchema;
    /** @deprecated use `IngestionDto$Outbound` instead. */
    export type Outbound = IngestionDto$Outbound;
}
