/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type TargetAppDto = {
    /**
     * id of target app
     */
    id?: string | undefined;
    /**
     * name of the target app
     */
    name: string;
};

/** @internal */
export const TargetAppDto$inboundSchema: z.ZodType<TargetAppDto, z.ZodTypeDef, unknown> = z.object({
    id: z.string().optional(),
    name: z.string(),
});

/** @internal */
export type TargetAppDto$Outbound = {
    id?: string | undefined;
    name: string;
};

/** @internal */
export const TargetAppDto$outboundSchema: z.ZodType<
    TargetAppDto$Outbound,
    z.ZodTypeDef,
    TargetAppDto
> = z.object({
    id: z.string().optional(),
    name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TargetAppDto$ {
    /** @deprecated use `TargetAppDto$inboundSchema` instead. */
    export const inboundSchema = TargetAppDto$inboundSchema;
    /** @deprecated use `TargetAppDto$outboundSchema` instead. */
    export const outboundSchema = TargetAppDto$outboundSchema;
    /** @deprecated use `TargetAppDto$Outbound` instead. */
    export type Outbound = TargetAppDto$Outbound;
}
