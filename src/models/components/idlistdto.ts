/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Schema for a list of IDs with a name and count
 */
export type IDListDto = {
    /**
     * The name associated with the list of IDs
     */
    name: string;
    /**
     * The count of IDs in the list
     */
    count: number;
    /**
     * The array of IDs
     */
    ids: Array<string>;
};

/** @internal */
export const IDListDto$inboundSchema: z.ZodType<IDListDto, z.ZodTypeDef, unknown> = z.object({
    name: z.string(),
    count: z.number(),
    ids: z.array(z.string()),
});

/** @internal */
export type IDListDto$Outbound = {
    name: string;
    count: number;
    ids: Array<string>;
};

/** @internal */
export const IDListDto$outboundSchema: z.ZodType<IDListDto$Outbound, z.ZodTypeDef, IDListDto> =
    z.object({
        name: z.string(),
        count: z.number(),
        ids: z.array(z.string()),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IDListDto$ {
    /** @deprecated use `IDListDto$inboundSchema` instead. */
    export const inboundSchema = IDListDto$inboundSchema;
    /** @deprecated use `IDListDto$outboundSchema` instead. */
    export const outboundSchema = IDListDto$outboundSchema;
    /** @deprecated use `IDListDto$Outbound` instead. */
    export type Outbound = IDListDto$Outbound;
}
