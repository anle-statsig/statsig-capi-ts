/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Schema for archiving an experiment
 */
export type ExperimentArchiveDto = {
    /**
     * The reason for archiving the experiment
     */
    archiveReason?: string | undefined;
};

/** @internal */
export const ExperimentArchiveDto$inboundSchema: z.ZodType<
    ExperimentArchiveDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    archiveReason: z.string().optional(),
});

/** @internal */
export type ExperimentArchiveDto$Outbound = {
    archiveReason?: string | undefined;
};

/** @internal */
export const ExperimentArchiveDto$outboundSchema: z.ZodType<
    ExperimentArchiveDto$Outbound,
    z.ZodTypeDef,
    ExperimentArchiveDto
> = z.object({
    archiveReason: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExperimentArchiveDto$ {
    /** @deprecated use `ExperimentArchiveDto$inboundSchema` instead. */
    export const inboundSchema = ExperimentArchiveDto$inboundSchema;
    /** @deprecated use `ExperimentArchiveDto$outboundSchema` instead. */
    export const outboundSchema = ExperimentArchiveDto$outboundSchema;
    /** @deprecated use `ExperimentArchiveDto$Outbound` instead. */
    export type Outbound = ExperimentArchiveDto$Outbound;
}
