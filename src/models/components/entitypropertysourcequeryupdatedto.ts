/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type EntityPropertySourceQueryUpdateDtoIdTypeMapping = {
    /**
     * ID for the Statsig unit.
     */
    statsigUnitID: string;
    /**
     * Column name linked to the ID.
     */
    column: string;
};

export type EntityPropertySourceQueryUpdateDto = {
    /**
     * Optional new name for the entity property source.
     */
    name?: string | undefined;
    /**
     * Optional updated context for the entity property source.
     */
    description?: string | undefined;
    /**
     * Optional updated tags for categorization.
     */
    tags?: Array<string> | undefined;
    /**
     * SQL query defining the data source.
     */
    sql: string;
    /**
     * Optional column name for timestamp.
     */
    timestampColumn?: string | undefined;
    /**
     * Indicates if the timestamp is treated as a day.
     */
    timestampAsDay?: boolean | undefined;
    /**
     * Mappings of Statsig units to their columns.
     */
    idTypeMapping: Array<EntityPropertySourceQueryUpdateDtoIdTypeMapping>;
};

/** @internal */
export const EntityPropertySourceQueryUpdateDtoIdTypeMapping$inboundSchema: z.ZodType<
    EntityPropertySourceQueryUpdateDtoIdTypeMapping,
    z.ZodTypeDef,
    unknown
> = z.object({
    statsigUnitID: z.string(),
    column: z.string(),
});

/** @internal */
export type EntityPropertySourceQueryUpdateDtoIdTypeMapping$Outbound = {
    statsigUnitID: string;
    column: string;
};

/** @internal */
export const EntityPropertySourceQueryUpdateDtoIdTypeMapping$outboundSchema: z.ZodType<
    EntityPropertySourceQueryUpdateDtoIdTypeMapping$Outbound,
    z.ZodTypeDef,
    EntityPropertySourceQueryUpdateDtoIdTypeMapping
> = z.object({
    statsigUnitID: z.string(),
    column: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntityPropertySourceQueryUpdateDtoIdTypeMapping$ {
    /** @deprecated use `EntityPropertySourceQueryUpdateDtoIdTypeMapping$inboundSchema` instead. */
    export const inboundSchema = EntityPropertySourceQueryUpdateDtoIdTypeMapping$inboundSchema;
    /** @deprecated use `EntityPropertySourceQueryUpdateDtoIdTypeMapping$outboundSchema` instead. */
    export const outboundSchema = EntityPropertySourceQueryUpdateDtoIdTypeMapping$outboundSchema;
    /** @deprecated use `EntityPropertySourceQueryUpdateDtoIdTypeMapping$Outbound` instead. */
    export type Outbound = EntityPropertySourceQueryUpdateDtoIdTypeMapping$Outbound;
}

/** @internal */
export const EntityPropertySourceQueryUpdateDto$inboundSchema: z.ZodType<
    EntityPropertySourceQueryUpdateDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: z.string().optional(),
    description: z.string().optional(),
    tags: z.array(z.string()).optional(),
    sql: z.string(),
    timestampColumn: z.string().optional(),
    timestampAsDay: z.boolean().optional(),
    idTypeMapping: z.array(
        z.lazy(() => EntityPropertySourceQueryUpdateDtoIdTypeMapping$inboundSchema)
    ),
});

/** @internal */
export type EntityPropertySourceQueryUpdateDto$Outbound = {
    name?: string | undefined;
    description?: string | undefined;
    tags?: Array<string> | undefined;
    sql: string;
    timestampColumn?: string | undefined;
    timestampAsDay?: boolean | undefined;
    idTypeMapping: Array<EntityPropertySourceQueryUpdateDtoIdTypeMapping$Outbound>;
};

/** @internal */
export const EntityPropertySourceQueryUpdateDto$outboundSchema: z.ZodType<
    EntityPropertySourceQueryUpdateDto$Outbound,
    z.ZodTypeDef,
    EntityPropertySourceQueryUpdateDto
> = z.object({
    name: z.string().optional(),
    description: z.string().optional(),
    tags: z.array(z.string()).optional(),
    sql: z.string(),
    timestampColumn: z.string().optional(),
    timestampAsDay: z.boolean().optional(),
    idTypeMapping: z.array(
        z.lazy(() => EntityPropertySourceQueryUpdateDtoIdTypeMapping$outboundSchema)
    ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntityPropertySourceQueryUpdateDto$ {
    /** @deprecated use `EntityPropertySourceQueryUpdateDto$inboundSchema` instead. */
    export const inboundSchema = EntityPropertySourceQueryUpdateDto$inboundSchema;
    /** @deprecated use `EntityPropertySourceQueryUpdateDto$outboundSchema` instead. */
    export const outboundSchema = EntityPropertySourceQueryUpdateDto$outboundSchema;
    /** @deprecated use `EntityPropertySourceQueryUpdateDto$Outbound` instead. */
    export type Outbound = EntityPropertySourceQueryUpdateDto$Outbound;
}
