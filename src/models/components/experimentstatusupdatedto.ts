/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Schema for updating the status of an experiment
 */
export type ExperimentStatusUpdateDto = {
    /**
     * The unique identifier for the experiment
     */
    id?: string | undefined;
    /**
     * The reason for making the decision to update the experiment status
     */
    decisionReason: string;
    /**
     * Indicates whether to remove targeting from the experiment
     */
    removeTargeting: boolean;
};

/** @internal */
export const ExperimentStatusUpdateDto$inboundSchema: z.ZodType<
    ExperimentStatusUpdateDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string().optional(),
    decisionReason: z.string(),
    removeTargeting: z.boolean(),
});

/** @internal */
export type ExperimentStatusUpdateDto$Outbound = {
    id?: string | undefined;
    decisionReason: string;
    removeTargeting: boolean;
};

/** @internal */
export const ExperimentStatusUpdateDto$outboundSchema: z.ZodType<
    ExperimentStatusUpdateDto$Outbound,
    z.ZodTypeDef,
    ExperimentStatusUpdateDto
> = z.object({
    id: z.string().optional(),
    decisionReason: z.string(),
    removeTargeting: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExperimentStatusUpdateDto$ {
    /** @deprecated use `ExperimentStatusUpdateDto$inboundSchema` instead. */
    export const inboundSchema = ExperimentStatusUpdateDto$inboundSchema;
    /** @deprecated use `ExperimentStatusUpdateDto$outboundSchema` instead. */
    export const outboundSchema = ExperimentStatusUpdateDto$outboundSchema;
    /** @deprecated use `ExperimentStatusUpdateDto$Outbound` instead. */
    export type Outbound = ExperimentStatusUpdateDto$Outbound;
}
