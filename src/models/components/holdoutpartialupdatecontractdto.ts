/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type HoldoutPartialUpdateContractDto = {
    /**
     * enable or disable the holdout
     */
    isEnabled?: boolean | undefined;
    /**
     * brief summary of what the holdout is being used for
     */
    description?: string | undefined;
    /**
     * percentage of users between 0-10% to pass through the holdout
     */
    passPercentage?: number | undefined;
    /**
     * an array of gateIDs which this holdout is applied to
     */
    gateIDs?: Array<string> | undefined;
    /**
     * an array of experimentIDs which this holdout is applied to
     */
    experimentIDs?: Array<string> | undefined;
    /**
     * an array of layerIDs which this holdout is applied to
     */
    layerIDs?: Array<string> | undefined;
    /**
     * whether the holdout is being applied to all new gates
     */
    isGlobal?: boolean | undefined;
    /**
     * the gateID that the holdout is targeting
     */
    targetingGateID?: any | null | undefined;
};

/** @internal */
export const HoldoutPartialUpdateContractDto$inboundSchema: z.ZodType<
    HoldoutPartialUpdateContractDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    isEnabled: z.boolean().optional(),
    description: z.string().optional(),
    passPercentage: z.number().optional(),
    gateIDs: z.array(z.string()).optional(),
    experimentIDs: z.array(z.string()).optional(),
    layerIDs: z.array(z.string()).optional(),
    isGlobal: z.boolean().optional(),
    targetingGateID: z.nullable(z.any()).optional(),
});

/** @internal */
export type HoldoutPartialUpdateContractDto$Outbound = {
    isEnabled?: boolean | undefined;
    description?: string | undefined;
    passPercentage?: number | undefined;
    gateIDs?: Array<string> | undefined;
    experimentIDs?: Array<string> | undefined;
    layerIDs?: Array<string> | undefined;
    isGlobal?: boolean | undefined;
    targetingGateID?: any | null | undefined;
};

/** @internal */
export const HoldoutPartialUpdateContractDto$outboundSchema: z.ZodType<
    HoldoutPartialUpdateContractDto$Outbound,
    z.ZodTypeDef,
    HoldoutPartialUpdateContractDto
> = z.object({
    isEnabled: z.boolean().optional(),
    description: z.string().optional(),
    passPercentage: z.number().optional(),
    gateIDs: z.array(z.string()).optional(),
    experimentIDs: z.array(z.string()).optional(),
    layerIDs: z.array(z.string()).optional(),
    isGlobal: z.boolean().optional(),
    targetingGateID: z.nullable(z.any()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HoldoutPartialUpdateContractDto$ {
    /** @deprecated use `HoldoutPartialUpdateContractDto$inboundSchema` instead. */
    export const inboundSchema = HoldoutPartialUpdateContractDto$inboundSchema;
    /** @deprecated use `HoldoutPartialUpdateContractDto$outboundSchema` instead. */
    export const outboundSchema = HoldoutPartialUpdateContractDto$outboundSchema;
    /** @deprecated use `HoldoutPartialUpdateContractDto$Outbound` instead. */
    export type Outbound = HoldoutPartialUpdateContractDto$Outbound;
}
