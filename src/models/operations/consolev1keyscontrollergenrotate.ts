/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type ConsoleV1KeysControllerGenRotateRequest = {
    id: string;
    /**
     * Optional header to respect review settings for mutation endpoints.
     */
    xRespectReviewSettings?: string | undefined;
};

/**
 * Key rotated successfully
 */
export type ConsoleV1KeysControllerGenRotateResponseBody = {
    /**
     * A simple string explaining the result of the operation.
     */
    message: string;
    data: components.KeyDto;
};

/** @internal */
export const ConsoleV1KeysControllerGenRotateRequest$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenRotateRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        "x-respect-review-settings": z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "x-respect-review-settings": "xRespectReviewSettings",
        });
    });

/** @internal */
export type ConsoleV1KeysControllerGenRotateRequest$Outbound = {
    id: string;
    "x-respect-review-settings"?: string | undefined;
};

/** @internal */
export const ConsoleV1KeysControllerGenRotateRequest$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenRotateRequest$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenRotateRequest
> = z
    .object({
        id: z.string(),
        xRespectReviewSettings: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xRespectReviewSettings: "x-respect-review-settings",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenRotateRequest$ {
    /** @deprecated use `ConsoleV1KeysControllerGenRotateRequest$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenRotateRequest$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenRotateRequest$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenRotateRequest$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenRotateRequest$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenRotateRequest$Outbound;
}

/** @internal */
export const ConsoleV1KeysControllerGenRotateResponseBody$inboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenRotateResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string(),
    data: components.KeyDto$inboundSchema,
});

/** @internal */
export type ConsoleV1KeysControllerGenRotateResponseBody$Outbound = {
    message: string;
    data: components.KeyDto$Outbound;
};

/** @internal */
export const ConsoleV1KeysControllerGenRotateResponseBody$outboundSchema: z.ZodType<
    ConsoleV1KeysControllerGenRotateResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1KeysControllerGenRotateResponseBody
> = z.object({
    message: z.string(),
    data: components.KeyDto$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1KeysControllerGenRotateResponseBody$ {
    /** @deprecated use `ConsoleV1KeysControllerGenRotateResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1KeysControllerGenRotateResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenRotateResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1KeysControllerGenRotateResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1KeysControllerGenRotateResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1KeysControllerGenRotateResponseBody$Outbound;
}
