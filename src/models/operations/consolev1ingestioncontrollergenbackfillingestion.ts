/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type ConsoleV1IngestionControllerGenBackfillIngestionRequest = {
    /**
     * Optional header to respect review settings for mutation endpoints.
     */
    xRespectReviewSettings?: string | undefined;
    ingestionBackfillContractDto: components.IngestionBackfillContractDto;
};

/**
 * Backfill Ingestion Success
 */
export type ConsoleV1IngestionControllerGenBackfillIngestionResponseBody = {
    /**
     * A simple string explaining the result of the operation.
     */
    message: string;
    data: components.IngestionBackfillDataDto;
};

/** @internal */
export const ConsoleV1IngestionControllerGenBackfillIngestionRequest$inboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenBackfillIngestionRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-respect-review-settings": z.string().optional(),
        IngestionBackfillContractDto: components.IngestionBackfillContractDto$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-respect-review-settings": "xRespectReviewSettings",
            IngestionBackfillContractDto: "ingestionBackfillContractDto",
        });
    });

/** @internal */
export type ConsoleV1IngestionControllerGenBackfillIngestionRequest$Outbound = {
    "x-respect-review-settings"?: string | undefined;
    IngestionBackfillContractDto: components.IngestionBackfillContractDto$Outbound;
};

/** @internal */
export const ConsoleV1IngestionControllerGenBackfillIngestionRequest$outboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenBackfillIngestionRequest$Outbound,
    z.ZodTypeDef,
    ConsoleV1IngestionControllerGenBackfillIngestionRequest
> = z
    .object({
        xRespectReviewSettings: z.string().optional(),
        ingestionBackfillContractDto: components.IngestionBackfillContractDto$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xRespectReviewSettings: "x-respect-review-settings",
            ingestionBackfillContractDto: "IngestionBackfillContractDto",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1IngestionControllerGenBackfillIngestionRequest$ {
    /** @deprecated use `ConsoleV1IngestionControllerGenBackfillIngestionRequest$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1IngestionControllerGenBackfillIngestionRequest$inboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenBackfillIngestionRequest$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1IngestionControllerGenBackfillIngestionRequest$outboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenBackfillIngestionRequest$Outbound` instead. */
    export type Outbound = ConsoleV1IngestionControllerGenBackfillIngestionRequest$Outbound;
}

/** @internal */
export const ConsoleV1IngestionControllerGenBackfillIngestionResponseBody$inboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenBackfillIngestionResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string(),
    data: components.IngestionBackfillDataDto$inboundSchema,
});

/** @internal */
export type ConsoleV1IngestionControllerGenBackfillIngestionResponseBody$Outbound = {
    message: string;
    data: components.IngestionBackfillDataDto$Outbound;
};

/** @internal */
export const ConsoleV1IngestionControllerGenBackfillIngestionResponseBody$outboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenBackfillIngestionResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1IngestionControllerGenBackfillIngestionResponseBody
> = z.object({
    message: z.string(),
    data: components.IngestionBackfillDataDto$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1IngestionControllerGenBackfillIngestionResponseBody$ {
    /** @deprecated use `ConsoleV1IngestionControllerGenBackfillIngestionResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1IngestionControllerGenBackfillIngestionResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenBackfillIngestionResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1IngestionControllerGenBackfillIngestionResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenBackfillIngestionResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1IngestionControllerGenBackfillIngestionResponseBody$Outbound;
}
