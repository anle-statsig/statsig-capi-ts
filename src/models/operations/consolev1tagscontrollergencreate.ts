/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type ConsoleV1TagsControllerGenCreateRequest = {
    /**
     * Optional header to respect review settings for mutation endpoints.
     */
    xRespectReviewSettings?: string | undefined;
    tagCreateDto: components.TagCreateDto;
};

/**
 * Create Tag Response
 */
export type ConsoleV1TagsControllerGenCreateResponseBody = {
    /**
     * A simple string explaining the result of the operation.
     */
    message: string;
    data: components.TagDto;
};

/** @internal */
export const ConsoleV1TagsControllerGenCreateRequest$inboundSchema: z.ZodType<
    ConsoleV1TagsControllerGenCreateRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-respect-review-settings": z.string().optional(),
        TagCreateDto: components.TagCreateDto$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-respect-review-settings": "xRespectReviewSettings",
            TagCreateDto: "tagCreateDto",
        });
    });

/** @internal */
export type ConsoleV1TagsControllerGenCreateRequest$Outbound = {
    "x-respect-review-settings"?: string | undefined;
    TagCreateDto: components.TagCreateDto$Outbound;
};

/** @internal */
export const ConsoleV1TagsControllerGenCreateRequest$outboundSchema: z.ZodType<
    ConsoleV1TagsControllerGenCreateRequest$Outbound,
    z.ZodTypeDef,
    ConsoleV1TagsControllerGenCreateRequest
> = z
    .object({
        xRespectReviewSettings: z.string().optional(),
        tagCreateDto: components.TagCreateDto$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xRespectReviewSettings: "x-respect-review-settings",
            tagCreateDto: "TagCreateDto",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1TagsControllerGenCreateRequest$ {
    /** @deprecated use `ConsoleV1TagsControllerGenCreateRequest$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1TagsControllerGenCreateRequest$inboundSchema;
    /** @deprecated use `ConsoleV1TagsControllerGenCreateRequest$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1TagsControllerGenCreateRequest$outboundSchema;
    /** @deprecated use `ConsoleV1TagsControllerGenCreateRequest$Outbound` instead. */
    export type Outbound = ConsoleV1TagsControllerGenCreateRequest$Outbound;
}

/** @internal */
export const ConsoleV1TagsControllerGenCreateResponseBody$inboundSchema: z.ZodType<
    ConsoleV1TagsControllerGenCreateResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string(),
    data: components.TagDto$inboundSchema,
});

/** @internal */
export type ConsoleV1TagsControllerGenCreateResponseBody$Outbound = {
    message: string;
    data: components.TagDto$Outbound;
};

/** @internal */
export const ConsoleV1TagsControllerGenCreateResponseBody$outboundSchema: z.ZodType<
    ConsoleV1TagsControllerGenCreateResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1TagsControllerGenCreateResponseBody
> = z.object({
    message: z.string(),
    data: components.TagDto$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1TagsControllerGenCreateResponseBody$ {
    /** @deprecated use `ConsoleV1TagsControllerGenCreateResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1TagsControllerGenCreateResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1TagsControllerGenCreateResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1TagsControllerGenCreateResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1TagsControllerGenCreateResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1TagsControllerGenCreateResponseBody$Outbound;
}
