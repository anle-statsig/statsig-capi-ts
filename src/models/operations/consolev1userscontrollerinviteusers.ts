/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type ConsoleV1UsersControllerInviteUsersRequest = {
    /**
     * Optional header to respect review settings for mutation endpoints.
     */
    xRespectReviewSettings?: string | undefined;
    userInvitesDto: components.UserInvitesDto;
};

/**
 * Invite user response
 */
export type ConsoleV1UsersControllerInviteUsersResponseBody = {
    message?: string | undefined;
};

/** @internal */
export const ConsoleV1UsersControllerInviteUsersRequest$inboundSchema: z.ZodType<
    ConsoleV1UsersControllerInviteUsersRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-respect-review-settings": z.string().optional(),
        UserInvitesDto: components.UserInvitesDto$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-respect-review-settings": "xRespectReviewSettings",
            UserInvitesDto: "userInvitesDto",
        });
    });

/** @internal */
export type ConsoleV1UsersControllerInviteUsersRequest$Outbound = {
    "x-respect-review-settings"?: string | undefined;
    UserInvitesDto: components.UserInvitesDto$Outbound;
};

/** @internal */
export const ConsoleV1UsersControllerInviteUsersRequest$outboundSchema: z.ZodType<
    ConsoleV1UsersControllerInviteUsersRequest$Outbound,
    z.ZodTypeDef,
    ConsoleV1UsersControllerInviteUsersRequest
> = z
    .object({
        xRespectReviewSettings: z.string().optional(),
        userInvitesDto: components.UserInvitesDto$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xRespectReviewSettings: "x-respect-review-settings",
            userInvitesDto: "UserInvitesDto",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1UsersControllerInviteUsersRequest$ {
    /** @deprecated use `ConsoleV1UsersControllerInviteUsersRequest$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1UsersControllerInviteUsersRequest$inboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerInviteUsersRequest$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1UsersControllerInviteUsersRequest$outboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerInviteUsersRequest$Outbound` instead. */
    export type Outbound = ConsoleV1UsersControllerInviteUsersRequest$Outbound;
}

/** @internal */
export const ConsoleV1UsersControllerInviteUsersResponseBody$inboundSchema: z.ZodType<
    ConsoleV1UsersControllerInviteUsersResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type ConsoleV1UsersControllerInviteUsersResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const ConsoleV1UsersControllerInviteUsersResponseBody$outboundSchema: z.ZodType<
    ConsoleV1UsersControllerInviteUsersResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1UsersControllerInviteUsersResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1UsersControllerInviteUsersResponseBody$ {
    /** @deprecated use `ConsoleV1UsersControllerInviteUsersResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1UsersControllerInviteUsersResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerInviteUsersResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1UsersControllerInviteUsersResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1UsersControllerInviteUsersResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1UsersControllerInviteUsersResponseBody$Outbound;
}
