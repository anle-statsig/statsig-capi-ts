/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as components from "../components/index.js";
import * as z from "zod";

export const Dataset = {
    Events: "Events",
    Metrics: "Metrics",
    ExportExposures: "export_exposures",
    EntityProperties: "entity_properties",
} as const;
export type Dataset = ClosedEnum<typeof Dataset>;

export type ConsoleV1IngestionControllerGenReadIngestionScheduleRequest = {
    dataset: Dataset;
    /**
     * Optional header to respect review settings for mutation endpoints.
     */
    xRespectReviewSettings?: string | undefined;
};

/**
 * Read Ingestion Schedule Success
 */
export type ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody = {
    /**
     * A simple string explaining the result of the operation.
     */
    message: string;
    data: components.IngestionScheduleDto;
};

/** @internal */
export const Dataset$inboundSchema: z.ZodNativeEnum<typeof Dataset> = z.nativeEnum(Dataset);

/** @internal */
export const Dataset$outboundSchema: z.ZodNativeEnum<typeof Dataset> = Dataset$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Dataset$ {
    /** @deprecated use `Dataset$inboundSchema` instead. */
    export const inboundSchema = Dataset$inboundSchema;
    /** @deprecated use `Dataset$outboundSchema` instead. */
    export const outboundSchema = Dataset$outboundSchema;
}

/** @internal */
export const ConsoleV1IngestionControllerGenReadIngestionScheduleRequest$inboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenReadIngestionScheduleRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        dataset: Dataset$inboundSchema,
        "x-respect-review-settings": z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "x-respect-review-settings": "xRespectReviewSettings",
        });
    });

/** @internal */
export type ConsoleV1IngestionControllerGenReadIngestionScheduleRequest$Outbound = {
    dataset: string;
    "x-respect-review-settings"?: string | undefined;
};

/** @internal */
export const ConsoleV1IngestionControllerGenReadIngestionScheduleRequest$outboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenReadIngestionScheduleRequest$Outbound,
    z.ZodTypeDef,
    ConsoleV1IngestionControllerGenReadIngestionScheduleRequest
> = z
    .object({
        dataset: Dataset$outboundSchema,
        xRespectReviewSettings: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xRespectReviewSettings: "x-respect-review-settings",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1IngestionControllerGenReadIngestionScheduleRequest$ {
    /** @deprecated use `ConsoleV1IngestionControllerGenReadIngestionScheduleRequest$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1IngestionControllerGenReadIngestionScheduleRequest$inboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenReadIngestionScheduleRequest$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1IngestionControllerGenReadIngestionScheduleRequest$outboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenReadIngestionScheduleRequest$Outbound` instead. */
    export type Outbound = ConsoleV1IngestionControllerGenReadIngestionScheduleRequest$Outbound;
}

/** @internal */
export const ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody$inboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string(),
    data: components.IngestionScheduleDto$inboundSchema,
});

/** @internal */
export type ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody$Outbound = {
    message: string;
    data: components.IngestionScheduleDto$Outbound;
};

/** @internal */
export const ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody$outboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody
> = z.object({
    message: z.string(),
    data: components.IngestionScheduleDto$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody$ {
    /** @deprecated use `ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1IngestionControllerGenReadIngestionScheduleResponseBody$Outbound;
}
