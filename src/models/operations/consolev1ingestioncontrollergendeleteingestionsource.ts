/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as components from "../components/index.js";
import * as z from "zod";

export const ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType = {
    Redshift: "redshift",
    BigqueryV2: "bigquery-v2",
    SnowflakeV2: "snowflake-v2",
    Databricks: "databricks",
    AzureSynapse: "azure-synapse",
    S3: "s3",
    Athena: "athena",
    Adls: "adls",
} as const;
export type ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType = ClosedEnum<
    typeof ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType
>;

export const ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset = {
    Events: "Events",
    Metrics: "Metrics",
    ExportExposures: "export_exposures",
    EntityProperties: "entity_properties",
} as const;
export type ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset = ClosedEnum<
    typeof ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset
>;

export type ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest = {
    type: ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType;
    dataset: ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset;
    sourceName?: string | undefined;
    /**
     * Optional header to respect review settings for mutation endpoints.
     */
    xRespectReviewSettings?: string | undefined;
};

/**
 * Delete Ingestion Success
 */
export type ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody = {
    /**
     * A simple string explaining the result of the operation.
     */
    message: string;
    data: components.IngestionDto;
};

/** @internal */
export const ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType
> = z.nativeEnum(ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType);

/** @internal */
export const ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType
> = ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType$ {
    /** @deprecated use `ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType$inboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType$outboundSchema;
}

/** @internal */
export const ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset$inboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset
> = z.nativeEnum(ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset);

/** @internal */
export const ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset$outboundSchema: z.ZodNativeEnum<
    typeof ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset
> = ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset$ {
    /** @deprecated use `ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset$inboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset$outboundSchema;
}

/** @internal */
export const ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest$inboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType$inboundSchema,
        dataset:
            ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset$inboundSchema,
        source_name: z.string().optional(),
        "x-respect-review-settings": z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            source_name: "sourceName",
            "x-respect-review-settings": "xRespectReviewSettings",
        });
    });

/** @internal */
export type ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest$Outbound = {
    type: string;
    dataset: string;
    source_name?: string | undefined;
    "x-respect-review-settings"?: string | undefined;
};

/** @internal */
export const ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest$outboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest$Outbound,
    z.ZodTypeDef,
    ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest
> = z
    .object({
        type: ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamType$outboundSchema,
        dataset:
            ConsoleV1IngestionControllerGenDeleteIngestionSourceQueryParamDataset$outboundSchema,
        sourceName: z.string().optional(),
        xRespectReviewSettings: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            sourceName: "source_name",
            xRespectReviewSettings: "x-respect-review-settings",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest$ {
    /** @deprecated use `ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest$inboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest$outboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest$Outbound` instead. */
    export type Outbound = ConsoleV1IngestionControllerGenDeleteIngestionSourceRequest$Outbound;
}

/** @internal */
export const ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody$inboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string(),
    data: components.IngestionDto$inboundSchema,
});

/** @internal */
export type ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody$Outbound = {
    message: string;
    data: components.IngestionDto$Outbound;
};

/** @internal */
export const ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody$outboundSchema: z.ZodType<
    ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody
> = z.object({
    message: z.string(),
    data: components.IngestionDto$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody$ {
    /** @deprecated use `ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1IngestionControllerGenDeleteIngestionSourceResponseBody$Outbound;
}
