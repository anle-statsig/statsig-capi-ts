/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type ConsoleV1MetricsControllerDeleteMetricRequest = {
    /**
     * id
     */
    id: string;
    /**
     * Optional header to respect review settings for mutation endpoints.
     */
    xRespectReviewSettings?: string | undefined;
};

/**
 * Delete metric response
 */
export type ConsoleV1MetricsControllerDeleteMetricResponseBody = {
    message?: string | undefined;
};

/** @internal */
export const ConsoleV1MetricsControllerDeleteMetricRequest$inboundSchema: z.ZodType<
    ConsoleV1MetricsControllerDeleteMetricRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        "x-respect-review-settings": z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "x-respect-review-settings": "xRespectReviewSettings",
        });
    });

/** @internal */
export type ConsoleV1MetricsControllerDeleteMetricRequest$Outbound = {
    id: string;
    "x-respect-review-settings"?: string | undefined;
};

/** @internal */
export const ConsoleV1MetricsControllerDeleteMetricRequest$outboundSchema: z.ZodType<
    ConsoleV1MetricsControllerDeleteMetricRequest$Outbound,
    z.ZodTypeDef,
    ConsoleV1MetricsControllerDeleteMetricRequest
> = z
    .object({
        id: z.string(),
        xRespectReviewSettings: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xRespectReviewSettings: "x-respect-review-settings",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1MetricsControllerDeleteMetricRequest$ {
    /** @deprecated use `ConsoleV1MetricsControllerDeleteMetricRequest$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1MetricsControllerDeleteMetricRequest$inboundSchema;
    /** @deprecated use `ConsoleV1MetricsControllerDeleteMetricRequest$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1MetricsControllerDeleteMetricRequest$outboundSchema;
    /** @deprecated use `ConsoleV1MetricsControllerDeleteMetricRequest$Outbound` instead. */
    export type Outbound = ConsoleV1MetricsControllerDeleteMetricRequest$Outbound;
}

/** @internal */
export const ConsoleV1MetricsControllerDeleteMetricResponseBody$inboundSchema: z.ZodType<
    ConsoleV1MetricsControllerDeleteMetricResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type ConsoleV1MetricsControllerDeleteMetricResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const ConsoleV1MetricsControllerDeleteMetricResponseBody$outboundSchema: z.ZodType<
    ConsoleV1MetricsControllerDeleteMetricResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1MetricsControllerDeleteMetricResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1MetricsControllerDeleteMetricResponseBody$ {
    /** @deprecated use `ConsoleV1MetricsControllerDeleteMetricResponseBody$inboundSchema` instead. */
    export const inboundSchema = ConsoleV1MetricsControllerDeleteMetricResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1MetricsControllerDeleteMetricResponseBody$outboundSchema` instead. */
    export const outboundSchema = ConsoleV1MetricsControllerDeleteMetricResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1MetricsControllerDeleteMetricResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1MetricsControllerDeleteMetricResponseBody$Outbound;
}
