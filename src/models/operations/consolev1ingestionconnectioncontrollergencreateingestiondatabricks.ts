/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest = {
    /**
     * Optional header to respect review settings for mutation endpoints.
     */
    xRespectReviewSettings?: string | undefined;
    ingestionCreateDatabricksConnectionContractDto: components.IngestionCreateDatabricksConnectionContractDto;
};

/**
 * Create Ingestion Databricks Success
 */
export type ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody = {
    /**
     * A simple string explaining the result of the operation.
     */
    message: string;
    data: components.IngestionDto;
};

/** @internal */
export const ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest$inboundSchema: z.ZodType<
    ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-respect-review-settings": z.string().optional(),
        IngestionCreateDatabricksConnectionContractDto:
            components.IngestionCreateDatabricksConnectionContractDto$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            "x-respect-review-settings": "xRespectReviewSettings",
            IngestionCreateDatabricksConnectionContractDto:
                "ingestionCreateDatabricksConnectionContractDto",
        });
    });

/** @internal */
export type ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest$Outbound = {
    "x-respect-review-settings"?: string | undefined;
    IngestionCreateDatabricksConnectionContractDto: components.IngestionCreateDatabricksConnectionContractDto$Outbound;
};

/** @internal */
export const ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest$outboundSchema: z.ZodType<
    ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest$Outbound,
    z.ZodTypeDef,
    ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest
> = z
    .object({
        xRespectReviewSettings: z.string().optional(),
        ingestionCreateDatabricksConnectionContractDto:
            components.IngestionCreateDatabricksConnectionContractDto$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            xRespectReviewSettings: "x-respect-review-settings",
            ingestionCreateDatabricksConnectionContractDto:
                "IngestionCreateDatabricksConnectionContractDto",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest$ {
    /** @deprecated use `ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest$inboundSchema;
    /** @deprecated use `ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest$outboundSchema;
    /** @deprecated use `ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest$Outbound` instead. */
    export type Outbound =
        ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksRequest$Outbound;
}

/** @internal */
export const ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody$inboundSchema: z.ZodType<
    ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string(),
    data: components.IngestionDto$inboundSchema,
});

/** @internal */
export type ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody$Outbound =
    {
        message: string;
        data: components.IngestionDto$Outbound;
    };

/** @internal */
export const ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody$outboundSchema: z.ZodType<
    ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody
> = z.object({
    message: z.string(),
    data: components.IngestionDto$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody$ {
    /** @deprecated use `ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody$Outbound` instead. */
    export type Outbound =
        ConsoleV1IngestionConnectionControllerGenCreateIngestionDatabricksResponseBody$Outbound;
}
