/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type ConsoleV1MetricsControllerGenDeleteMetricSourceRequest = {
    /**
     * name
     */
    name: string;
    /**
     * Optional header to respect review settings for mutation endpoints.
     */
    xRespectReviewSettings?: string | undefined;
};

/**
 * Delete metric source response
 */
export type ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody = {
    message?: string | undefined;
};

/** @internal */
export const ConsoleV1MetricsControllerGenDeleteMetricSourceRequest$inboundSchema: z.ZodType<
    ConsoleV1MetricsControllerGenDeleteMetricSourceRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        name: z.string(),
        "x-respect-review-settings": z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "x-respect-review-settings": "xRespectReviewSettings",
        });
    });

/** @internal */
export type ConsoleV1MetricsControllerGenDeleteMetricSourceRequest$Outbound = {
    name: string;
    "x-respect-review-settings"?: string | undefined;
};

/** @internal */
export const ConsoleV1MetricsControllerGenDeleteMetricSourceRequest$outboundSchema: z.ZodType<
    ConsoleV1MetricsControllerGenDeleteMetricSourceRequest$Outbound,
    z.ZodTypeDef,
    ConsoleV1MetricsControllerGenDeleteMetricSourceRequest
> = z
    .object({
        name: z.string(),
        xRespectReviewSettings: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xRespectReviewSettings: "x-respect-review-settings",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1MetricsControllerGenDeleteMetricSourceRequest$ {
    /** @deprecated use `ConsoleV1MetricsControllerGenDeleteMetricSourceRequest$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1MetricsControllerGenDeleteMetricSourceRequest$inboundSchema;
    /** @deprecated use `ConsoleV1MetricsControllerGenDeleteMetricSourceRequest$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1MetricsControllerGenDeleteMetricSourceRequest$outboundSchema;
    /** @deprecated use `ConsoleV1MetricsControllerGenDeleteMetricSourceRequest$Outbound` instead. */
    export type Outbound = ConsoleV1MetricsControllerGenDeleteMetricSourceRequest$Outbound;
}

/** @internal */
export const ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody$inboundSchema: z.ZodType<
    ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    message: z.string().optional(),
});

/** @internal */
export type ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody$Outbound = {
    message?: string | undefined;
};

/** @internal */
export const ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody$outboundSchema: z.ZodType<
    ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody$Outbound,
    z.ZodTypeDef,
    ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody
> = z.object({
    message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody$ {
    /** @deprecated use `ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody$inboundSchema` instead. */
    export const inboundSchema =
        ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody$inboundSchema;
    /** @deprecated use `ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody$outboundSchema` instead. */
    export const outboundSchema =
        ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody$outboundSchema;
    /** @deprecated use `ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody$Outbound` instead. */
    export type Outbound = ConsoleV1MetricsControllerGenDeleteMetricSourceResponseBody$Outbound;
}
